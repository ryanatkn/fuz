// Generated by package.gen.ts
// Do not edit directly - regenerated on build

import type {Package_Json} from '@ryanatkn/belt/package_json.js';
import type {Src_Json} from '$lib/src_json.js';

export const package_json: Package_Json = {
	name: '@ryanatkn/fuz',
	version: '0.147.0',
	description: 'Svelte UI library',
	motto: 'friendly user zystem',
	glyph: 'ðŸ§¶',
	logo: 'logo.svg',
	logo_alt: 'a friendly brown spider facing you',
	public: true,
	license: 'MIT',
	homepage: 'https://www.fuz.dev/',
	author: {
		name: 'Ryan Atkinson',
		email: 'mail@ryanatkn.com',
		url: 'https://www.ryanatkn.com/',
	},
	repository: {
		type: 'git',
		url: 'git+https://github.com/ryanatkn/fuz.git',
	},
	bugs: 'https://github.com/ryanatkn/fuz/issues',
	funding: 'https://www.ryanatkn.com/funding',
	scripts: {
		start: 'gro dev',
		dev: 'gro dev',
		build: 'gro build',
		check: 'gro check',
		test: 'gro test',
		preview: 'vite preview',
		deploy: 'gro deploy',
	},
	type: 'module',
	engines: {
		node: '>=22.15',
	},
	peerDependencies: {
		'@ryanatkn/belt': '^0.35.1',
		'@ryanatkn/gro': '>=0.165.0',
		'@ryanatkn/moss': '^0.36.2',
		'@sveltejs/kit': '^2.26',
		'esm-env': '^1',
		svelte: '^5',
	},
	peerDependenciesMeta: {
		'@ryanatkn/gro': {
			optional: true,
		},
		'esm-env': {
			optional: true,
		},
	},
	devDependencies: {
		'@changesets/changelog-git': '^0.2.1',
		'@ryanatkn/belt': '^0.35.1',
		'@ryanatkn/eslint-config': '^0.8.0',
		'@ryanatkn/fuz_code': '^0.28.0',
		'@ryanatkn/gro': '^0.170.0',
		'@ryanatkn/moss': '^0.36.3',
		'@sveltejs/adapter-static': '^3.0.10',
		'@sveltejs/kit': '^2.47.3',
		'@sveltejs/package': '^2.5.4',
		'@sveltejs/vite-plugin-svelte': '^6.2.1',
		'@types/node': '^24.3.0',
		eslint: '^9.34.0',
		'eslint-plugin-svelte': '^3.12.5',
		'esm-env': '^1.2.2',
		jsdom: '^27.0.1',
		prettier: '^3.6.2',
		'prettier-plugin-svelte': '^3.4.0',
		svelte: '^5.41.3',
		'svelte-check': '^4.3.3',
		svelte2tsx: '^0.7.45',
		tslib: '^2.8.1',
		typescript: '^5.9.3',
		'typescript-eslint': '^8.41.0',
		vitest: '^3.2.4',
	},
	prettier: {
		plugins: ['prettier-plugin-svelte'],
		useTabs: true,
		printWidth: 100,
		singleQuote: true,
		bracketSpacing: false,
		overrides: [
			{
				files: 'package.json',
				options: {
					useTabs: false,
				},
			},
		],
	},
	sideEffects: ['**/*.css'],
	files: ['dist', 'src/lib/**/*.ts', '!src/lib/**/*.test.*', '!dist/**/*.test.*'],
	exports: {
		'./package.json': './package.json',
		'./*.js': {
			types: './dist/*.d.ts',
			default: './dist/*.js',
		},
		'./*.ts': {
			types: './dist/*.d.ts',
			default: './dist/*.js',
		},
		'./*.svelte': {
			types: './dist/*.svelte.d.ts',
			svelte: './dist/*.svelte',
			default: './dist/*.svelte',
		},
	},
};

export const src_json: Src_Json = {
	name: '@ryanatkn/fuz',
	version: '0.147.0',
	modules: {
		'./Alert.svelte': {
			path: 'Alert.svelte',
			declarations: [
				{
					name: 'Alert',
					kind: 'component',
					props: [
						{
							name: 'status',
							type: 'Alert_Status',
							optional: true,
						},
						{
							name: 'color',
							type: 'string',
							optional: true,
						},
						{
							name: 'onclick',
							type: '(() => void) | undefined',
							optional: true,
						},
						{
							name: 'disabled',
							type: 'boolean',
							optional: true,
						},
						{
							name: 'attrs',
							type: 'HTMLAttributes<HTMLElement> | undefined',
							optional: true,
						},
						{
							name: 'icon',
							type: 'string | Snippet<[icon: string]> | null | undefined',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: false,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 103,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Api_Page.svelte': {
			path: 'Api_Page.svelte',
			declarations: [
				{
					name: 'Api_Page',
					kind: 'component',
					props: [
						{
							name: 'decl',
							type: 'Src_Module_Declaration',
							optional: false,
						},
						{
							name: 'module_path',
							type: 'string',
							optional: false,
						},
						{
							name: 'repo_url',
							type: 'string',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 390,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Breadcrumb.svelte': {
			path: 'Breadcrumb.svelte',
			declarations: [
				{
					name: 'Breadcrumb',
					kind: 'component',
					props: [
						{
							name: 'path',
							type: 'string | undefined',
							optional: true,
							description: 'Prefixed with a slash and relative to the base path.',
						},
						{
							name: 'selected_path',
							type: 'string | null | undefined',
							optional: true,
							description:
								'Prefixed with a slash and relative to the base path.\n`null` means none and `undefined` is detected from the current url.',
						},
						{
							name: 'base_path',
							type: 'string',
							optional: true,
							description:
								'Sets a custom base path of `path` and `selected_path`.\nDefaults to `base` from `$app/paths`.',
						},
						{
							name: 'separator',
							type: 'Snippet',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 80,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Card.svelte': {
			path: 'Card.svelte',
			declarations: [
				{
					name: 'Card',
					kind: 'component',
					props: [
						{
							name: 'tag',
							type: 'string | undefined',
							optional: true,
						},
						{
							name: 'href',
							type: 'string | undefined',
							optional: true,
						},
						{
							name: 'align',
							type: "'left' | 'right' | 'above' | 'below'",
							optional: true,
						},
						{
							name: 'attrs',
							type: 'any',
							optional: true,
						},
						{
							name: 'icon',
							type: 'string | Snippet',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: false,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 153,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Color_Scheme_Input.svelte': {
			path: 'Color_Scheme_Input.svelte',
			declarations: [
				{
					name: 'Color_Scheme_Input',
					kind: 'component',
					props: [
						{
							name: 'value',
							type: '{color_scheme: Color_Scheme}',
							optional: true,
						},
						{
							name: 'onchange',
							type: '(color_scheme: Color_Scheme) => void',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 68,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Community_Links.svelte': {
			path: 'Community_Links.svelte',
			declarations: [
				{
					name: 'Community_Links',
					kind: 'component',
					props: [
						{
							name: 'selected',
							type: "'webdevladder.net' | 'ryanatkn.com'",
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 54,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Community_Links_Panel.svelte': {
			path: 'Community_Links_Panel.svelte',
			declarations: [
				{
					name: 'Community_Links_Panel',
					kind: 'component',
					props: [
						{
							name: 'children',
							type: 'Snippet',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 23,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Contextmenu.svelte': {
			path: 'Contextmenu.svelte',
			declarations: [
				{
					name: 'Contextmenu',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 30,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Contextmenu_Entry.svelte': {
			path: 'Contextmenu_Entry.svelte',
			declarations: [
				{
					name: 'Contextmenu_Entry',
					kind: 'component',
					props: [
						{
							name: 'run',
							type: 'Contextmenu_Run',
							optional: false,
						},
						{
							name: 'icon',
							type: 'string | Snippet',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: false,
						},
						{
							name: 'disabled',
							type: 'boolean',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 72,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Contextmenu_Link_Entry.svelte': {
			path: 'Contextmenu_Link_Entry.svelte',
			declarations: [
				{
					name: 'Contextmenu_Link_Entry',
					kind: 'component',
					props: [
						{
							name: 'href',
							type: 'string',
							optional: false,
						},
						{
							name: 'icon',
							type: 'string | Snippet<[icon: string]>',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: true,
						},
						{
							name: 'disabled',
							type: 'boolean',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 111,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Contextmenu_Root.svelte': {
			path: 'Contextmenu_Root.svelte',
			declarations: [
				{
					name: 'Contextmenu_Root',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 373,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Contextmenu_Root_For_Safari_Compatibility.svelte': {
			path: 'Contextmenu_Root_For_Safari_Compatibility.svelte',
			declarations: [
				{
					name: 'Contextmenu_Root_For_Safari_Compatibility',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 542,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Contextmenu_Separator.svelte': {
			path: 'Contextmenu_Separator.svelte',
			declarations: [
				{
					name: 'Contextmenu_Separator',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 17,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Contextmenu_Submenu.svelte': {
			path: 'Contextmenu_Submenu.svelte',
			declarations: [
				{
					name: 'Contextmenu_Submenu',
					kind: 'component',
					props: [
						{
							name: 'icon',
							type: 'Snippet',
							optional: true,
						},
						{
							name: 'menu',
							type: 'Snippet',
							optional: false,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: false,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 118,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Contextmenu_Text_Entry.svelte': {
			path: 'Contextmenu_Text_Entry.svelte',
			declarations: [
				{
					name: 'Contextmenu_Text_Entry',
					kind: 'component',
					props: [
						{
							name: 'run',
							type: 'Contextmenu_Run',
							optional: false,
						},
						{
							name: 'content',
							type: 'string',
							optional: false,
						},
						{
							name: 'icon',
							type: 'string',
							optional: false,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 20,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Copy_To_Clipboard.svelte': {
			path: 'Copy_To_Clipboard.svelte',
			declarations: [
				{
					name: 'Copy_To_Clipboard',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 79,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Declaration_Link.svelte': {
			path: 'Declaration_Link.svelte',
			declarations: [
				{
					name: 'Declaration_Link',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 141,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Details.svelte': {
			path: 'Details.svelte',
			declarations: [
				{
					name: 'Details',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 46,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Dialog.svelte': {
			path: 'Dialog.svelte',
			declarations: [
				{
					name: 'Dialog',
					kind: 'component',
					props: [
						{
							name: 'container',
							type: 'HTMLElement',
							optional: true,
						},
						{
							name: 'layout',
							type: 'Dialog_Layout',
							optional: true,
							description: '',
						},
						{
							name: 'index',
							type: 'number',
							optional: true,
							description:
								'index 0 is under 1 is under 2 etc -- the topmost dialog is the last in the array',
						},
						{
							name: 'active',
							type: 'boolean',
							optional: true,
							description: '',
						},
						{
							name: 'content_selector',
							type: 'string | null',
							optional: true,
							description:
								'If provided, prevents clicks that would close the dialog\nfrom bubbling past any elements matching this selector.',
						},
						{
							name: 'onclose',
							type: '() => void',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet<[close: (e?: Event) => void]>',
							optional: false,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 220,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
			imported_by: ['./dialog.ts'],
		},
		'./Dialogs.svelte': {
			path: 'Dialogs.svelte',
			declarations: [
				{
					name: 'Dialogs',
					kind: 'component',
					props: [
						{
							name: 'dialogs',
							type: 'Array<Dialog_Params>',
							optional: false,
						},
						{
							name: 'onclose',
							type: '() => void',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet<[dialog: Dialog_Params]>',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 27,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Docs.svelte': {
			path: 'Docs.svelte',
			declarations: [
				{
					name: 'Docs',
					kind: 'component',
					props: [
						{
							name: 'tomes',
							type: 'Array<Tome>',
							optional: false,
						},
						{
							name: 'pkg',
							type: 'Pkg',
							optional: false,
						},
						{
							name: 'breadcrumb_children',
							type: 'Snippet<[is_primary_nav: boolean]>',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: false,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 174,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Docs_Content.svelte': {
			path: 'Docs_Content.svelte',
			declarations: [
				{
					name: 'Docs_Content',
					kind: 'component',
					props: [
						{
							name: 'tomes',
							type: 'Array<Tome>',
							optional: false,
						},
						{
							name: 'pkg',
							type: 'Pkg',
							optional: false,
						},
						{
							name: 'repo_name',
							type: 'Snippet<[repo_name: string]>',
							optional: true,
						},
						{
							name: 'content',
							type: 'Snippet',
							optional: true,
						},
						{
							name: 'header',
							type: 'Snippet',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 37,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Docs_Footer.svelte': {
			path: 'Docs_Footer.svelte',
			declarations: [
				{
					name: 'Docs_Footer',
					kind: 'component',
					props: [
						{
							name: 'pkg',
							type: 'Pkg',
							optional: false,
						},
						{
							name: 'root_url',
							type: 'Url | null',
							optional: true,
						},
						{
							name: 'logo',
							type: 'Snippet',
							optional: true,
						},
						{
							name: 'logo_header',
							type: 'Snippet',
							optional: true,
						},
						{
							name: 'logo_footer',
							type: 'Snippet',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 60,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Docs_Menu.svelte': {
			path: 'Docs_Menu.svelte',
			declarations: [
				{
					name: 'Docs_Menu',
					kind: 'component',
					props: [
						{
							name: 'tomes',
							type: 'Array<Tome>',
							optional: false,
						},
						{
							name: 'children',
							type: 'Snippet<[category: string]>',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 69,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Docs_Menu_Header.svelte': {
			path: 'Docs_Menu_Header.svelte',
			declarations: [
				{
					name: 'Docs_Menu_Header',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 16,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Docs_Page_Links.svelte': {
			path: 'Docs_Page_Links.svelte',
			declarations: [
				{
					name: 'Docs_Page_Links',
					kind: 'component',
					props: [
						{
							name: 'sidebar',
							type: 'boolean',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 72,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Docs_Primary_Nav.svelte': {
			path: 'Docs_Primary_Nav.svelte',
			declarations: [
				{
					name: 'Docs_Primary_Nav',
					kind: 'component',
					props: [
						{
							name: 'pkg',
							type: 'Pkg',
							optional: false,
						},
						{
							name: 'breadcrumb_children',
							type: 'Snippet<[is_primary_nav: boolean]>',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 92,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Docs_Secondary_Nav.svelte': {
			path: 'Docs_Secondary_Nav.svelte',
			declarations: [
				{
					name: 'Docs_Secondary_Nav',
					kind: 'component',
					props: [
						{
							name: 'tomes',
							type: 'Array<Tome>',
							optional: false,
						},
						{
							name: 'sidebar',
							type: 'boolean',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 61,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Docs_Tertiary_Nav.svelte': {
			path: 'Docs_Tertiary_Nav.svelte',
			declarations: [
				{
					name: 'Docs_Tertiary_Nav',
					kind: 'component',
					props: [
						{
							name: 'tomes',
							type: 'Array<Tome>',
							optional: false,
						},
						{
							name: 'tomes_by_name',
							type: 'Map<string, Tome>',
							optional: false,
						},
						{
							name: 'sidebar',
							type: 'boolean',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 71,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Glyph.svelte': {
			path: 'Glyph.svelte',
			declarations: [
				{
					name: 'Glyph',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 29,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Hashlink.svelte': {
			path: 'Hashlink.svelte',
			declarations: [
				{
					name: 'Hashlink',
					kind: 'component',
					props: [
						{
							name: 'slug',
							type: 'string',
							optional: false,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 42,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Hidden_Personal_Links.svelte': {
			path: 'Hidden_Personal_Links.svelte',
			declarations: [
				{
					name: 'Hidden_Personal_Links',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 7,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Hue_Input.svelte': {
			path: 'Hue_Input.svelte',
			declarations: [
				{
					name: 'Hue_Input',
					kind: 'component',
					props: [
						{
							name: 'value',
							type: 'Hue',
							optional: true,
						},
						{
							name: 'oninput',
							type: '(hue: Hue) => void',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 126,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Identifier.svelte': {
			path: 'Identifier.svelte',
			declarations: [
				{
					name: 'Identifier',
					kind: 'component',
					props: [
						{
							name: 'name',
							type: 'string',
							optional: false,
						},
						{
							name: 'code_attrs',
							type: "SvelteHTMLElements['code_attrs']",
							optional: true,
						},
						{
							name: 'attrs',
							type: "SvelteHTMLElements['a']",
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 73,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Identifier_Link.svelte': {
			path: 'Identifier_Link.svelte',
			declarations: [
				{
					name: 'Identifier_Link',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 47,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Img_Or_Svg.svelte': {
			path: 'Img_Or_Svg.svelte',
			declarations: [
				{
					name: 'Img_Or_Svg',
					kind: 'component',
					props: [
						{
							name: 'src',
							type: 'string',
							optional: false,
						},
						{
							name: 'label',
							type: 'string',
							optional: true,
						},
						{
							name: 'size',
							type: 'string',
							optional: true,
							description:
								'Sets both the `width` and `height` of the svg. Overridden by the `width` and `height` props.',
						},
						{
							name: 'width',
							type: 'string',
							optional: true,
							description: 'Sets the `width` of the svg. Overrides `size`.',
						},
						{
							name: 'height',
							type: 'string',
							optional: true,
							description: 'Sets the `height` of the svg. Overrides `size`.',
						},
						{
							name: 'svg_attrs',
							type: "SvelteHTMLElements['svg']",
							optional: true,
						},
						{
							name: 'img_attrs',
							type: "SvelteHTMLElements['img']",
							optional: true,
						},
						{
							name: 'attrs',
							type: "Pick<SvelteHTMLElements['div'], 'class' | 'style'>",
							optional: true,
							description: 'Shared attributes for both img and svg.',
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 52,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Mdn_Link.svelte': {
			path: 'Mdn_Link.svelte',
			declarations: [
				{
					name: 'Mdn_Link',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 44,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Package_Detail.svelte': {
			path: 'Package_Detail.svelte',
			declarations: [
				{
					name: 'Package_Detail',
					kind: 'component',
					props: [
						{
							name: 'pkg',
							type: 'Pkg',
							optional: false,
						},
						{
							name: 'repo_name',
							type: 'Snippet<[repo_name: string]>',
							optional: true,
						},
						{
							name: 'description',
							type: 'Snippet<[description: string]>',
							optional: true,
						},
						{
							name: 'motto',
							type: 'Snippet<[description: string]>',
							optional: true,
						},
						{
							name: 'npm_url',
							type: 'Snippet<[npm_url: string]>',
							optional: true,
						},
						{
							name: 'homepage_url',
							type: 'Snippet<[homepage_url: string]>',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet<[pkg: Pkg]>',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 332,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Package_Summary.svelte': {
			path: 'Package_Summary.svelte',
			declarations: [
				{
					name: 'Package_Summary',
					kind: 'component',
					props: [
						{
							name: 'pkg',
							type: 'Pkg',
							optional: false,
						},
						{
							name: 'repo_name',
							type: 'Snippet<[repo_name: string]>',
							optional: true,
						},
						{
							name: 'logo',
							type: 'Snippet<[logo_url: string, logo_alt: string]>',
							optional: true,
						},
						{
							name: 'motto',
							type: 'Snippet<[motto: string, glyph?: string]>',
							optional: true,
						},
						{
							name: 'description',
							type: 'Snippet<[description: string, glyph?: string]>',
							optional: true,
						},
						{
							name: 'npm_url',
							type: 'Snippet<[npm_url: string]>',
							optional: true,
						},
						{
							name: 'homepage_url',
							type: 'Snippet<[homepage_url: string]>',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 143,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Paste_From_Clipboard.svelte': {
			path: 'Paste_From_Clipboard.svelte',
			declarations: [
				{
					name: 'Paste_From_Clipboard',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 36,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Pending_Animation.svelte': {
			path: 'Pending_Animation.svelte',
			declarations: [
				{
					name: 'Pending_Animation',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 63,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Pending_Button.svelte': {
			path: 'Pending_Button.svelte',
			declarations: [
				{
					name: 'Pending_Button',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 74,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Project_Links.svelte': {
			path: 'Project_Links.svelte',
			declarations: [
				{
					name: 'Project_Links',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 55,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Redirect.svelte': {
			path: 'Redirect.svelte',
			declarations: [
				{
					name: 'Redirect',
					kind: 'component',
					props: [
						{
							name: 'host',
							type: 'string',
							optional: true,
							description:
								'The target host to redirect to. Defaults to the current `location.host`.',
						},
						{
							name: 'path',
							type: 'string',
							optional: true,
							description:
								'The target path to redirect to. Defaults to the current `location.pathname`.',
						},
						{
							name: 'auto',
							type: 'boolean',
							optional: true,
							description:
								'Should the redirect happen automatically without user input? Defaults to `true`.',
						},
						{
							name: 'children',
							type: 'Snippet<[url: string]>',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 42,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Spiders.svelte': {
			path: 'Spiders.svelte',
			declarations: [
				{
					name: 'Spiders',
					kind: 'component',
					props: [
						{
							name: 'spiders',
							type: 'Array<string>',
							optional: true,
						},
						{
							name: 'seed',
							type: 'unknown',
							optional: true,
						},
						{
							name: 'random',
							type: 'typeof Math.random',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 63,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Svg.svelte': {
			path: 'Svg.svelte',
			declarations: [
				{
					name: 'Svg',
					kind: 'component',
					props: [
						{
							name: 'data',
							type: 'Svg_Data',
							optional: false,
						},
						{
							name: 'fill',
							type: 'string | null',
							optional: true,
							description: 'Overrides `data.fill`.',
						},
						{
							name: 'size',
							type: 'string',
							optional: true,
							description:
								'Sets both the `width` and `height` of the svg. Overridden by the `width` and `height` props.',
						},
						{
							name: 'width',
							type: 'string',
							optional: true,
							description: 'Sets the `width` of the svg. Overrides `size`.',
						},
						{
							name: 'height',
							type: 'string',
							optional: true,
							description: 'Sets the `height` of the svg. Overrides `size`.',
						},
						{
							name: 'label',
							type: 'string',
							optional: true,
						},
						{
							name: 'inline',
							type: 'boolean',
							optional: true,
							description:
								'Renders the SVG as an inline block with spacing appropriate for text. Defaults to `false`.',
						},
						{
							name: 'shrink',
							type: 'boolean',
							optional: true,
							description: 'Flex shrink behavior? Defaults to `true`.',
						},
						{
							name: 'attrs',
							type: "SvelteHTMLElements['svg']",
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 105,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
			imported_by: ['./logos.ts'],
		},
		'./Teleport.svelte': {
			path: 'Teleport.svelte',
			declarations: [
				{
					name: 'Teleport',
					kind: 'component',
					props: [
						{
							name: 'to',
							type: 'HTMLElement | undefined | null',
							optional: true,
							description:
								"Defaults to `undefined` to lessen friction with SSR.\nWe may want to change this to optionally accept a string selector,\nbut that didn't seem to be the best API for the `Dialog`.",
						},
						{
							name: 'onmove',
							type: '(el: HTMLElement, to: HTMLElement) => void',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: false,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 47,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Theme_Input.svelte': {
			path: 'Theme_Input.svelte',
			declarations: [
				{
					name: 'Theme_Input',
					kind: 'component',
					props: [
						{
							name: 'selected_theme',
							type: '{theme: Theme}',
							optional: true,
						},
						{
							name: 'themes',
							type: 'Array<Theme>',
							optional: true,
						},
						{
							name: 'enable_editing',
							type: 'boolean',
							optional: true,
						},
						{
							name: 'select',
							type: '((theme: Theme) => void | boolean) | null',
							optional: true,
						},
						{
							name: 'onselect',
							type: '(theme: Theme) => void',
							optional: true,
						},
						{
							name: 'onedit',
							type: '(theme: Theme) => void',
							optional: true,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 78,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Themed.svelte': {
			path: 'Themed.svelte',
			declarations: [
				{
					name: 'Themed',
					kind: 'component',
					props: [
						{
							name: 'sync_color_scheme',
							type: 'typeof default_sync_color_scheme',
							optional: true,
						},
						{
							name: 'load_color_scheme',
							type: 'typeof default_load_color_scheme',
							optional: true,
						},
						{
							name: 'save_color_scheme',
							type: 'typeof default_save_color_scheme',
							optional: true,
						},
						{
							name: 'load_theme',
							type: 'typeof default_load_theme',
							optional: true,
						},
						{
							name: 'save_theme',
							type: 'typeof default_save_theme',
							optional: true,
						},
						{
							name: 'theme_fallback',
							type: 'Theme | undefined',
							optional: true,
						},
						{
							name: 'themer',
							type: 'Themer',
							optional: true,
							description:
								"A reactive class containing the selected theme and color scheme.\nDefaults to the first default theme.\nThe class reference is not reactive\nbecause it's set in context without a wrapper, use `{#key theme}` if it changes.",
						},
						{
							name: 'children',
							type: 'Snippet<[themer: Themer, style: string | null, theme_style_html: string | null]>',
							optional: false,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 104,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Tome_Content.svelte': {
			path: 'Tome_Content.svelte',
			declarations: [
				{
					name: 'Tome_Content',
					kind: 'component',
					props: [
						{
							name: 'tome',
							type: 'Tome',
							optional: false,
						},
						{
							name: 'docs_path',
							type: 'string',
							optional: true,
						},
						{
							name: 'header',
							type: 'Snippet',
							optional: true,
						},
						{
							name: 'children',
							type: 'Snippet',
							optional: false,
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 62,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Tome_Header.svelte': {
			path: 'Tome_Header.svelte',
			declarations: [
				{
					name: 'Tome_Header',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 57,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Tome_Link.svelte': {
			path: 'Tome_Link.svelte',
			declarations: [
				{
					name: 'Tome_Link',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 43,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Tome_Section.svelte': {
			path: 'Tome_Section.svelte',
			declarations: [
				{
					name: 'Tome_Section',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 47,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Tome_Section_Header.svelte': {
			path: 'Tome_Section_Header.svelte',
			declarations: [
				{
					name: 'Tome_Section_Header',
					kind: 'component',
					source_location: {
						line: 1,
						column: 0,
						end_line: 67,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./Tooltip.svelte': {
			path: 'Tooltip.svelte',
			declarations: [
				{
					name: 'Tooltip',
					kind: 'component',
					props: [
						{
							name: 'tooltip',
							type: 'Tooltip_State',
							optional: true,
							description: 'Optional tooltip state - defaults to context value',
						},
					],
					source_location: {
						line: 1,
						column: 0,
						end_line: 115,
						end_column: 0,
					},
					exported: true,
				},
			],
			imports: [],
		},
		'./alert.ts': {
			path: 'alert.ts',
			declarations: [
				{
					name: 'Alert_Status',
					kind: 'type',
					source_location: {
						line: 3,
						column: 0,
						end_line: 3,
						end_column: 55,
					},
					type_signature: 'Alert_Status',
					exported: true,
				},
				{
					name: 'Alert_Status_Options',
					kind: 'type',
					source_location: {
						line: 5,
						column: 0,
						end_line: 8,
						end_column: 1,
					},
					type_signature: 'Alert_Status_Options',
					exported: true,
				},
				{
					name: 'alert_status_options',
					kind: 'variable',
					source_location: {
						line: 10,
						column: 13,
						end_line: 14,
						end_column: 1,
					},
					type_signature: 'Record<Alert_Status, Alert_Status_Options>',
					exported: false,
				},
			],
			imports: [],
			module_comment: '// TODO move to module context?',
		},
		'./api.ts': {
			path: 'api.ts',
			declarations: [
				{
					name: 'Api',
					kind: 'type',
					doc_comment: 'API documentation data\nWraps Pkg with properly typed src_json',
					summary: 'API documentation data\nWraps Pkg with properly typed src_json',
					examples: [],
					see_also: [],
					source_location: {
						line: 14,
						column: 0,
						end_line: 17,
						end_column: 1,
					},
					type_signature: 'Api',
					exported: true,
				},
				{
					name: 'api_context',
					kind: 'variable',
					source_location: {
						line: 19,
						column: 13,
						end_line: 19,
						end_column: 48,
					},
					type_signature:
						'{ get: (error_message?: string | undefined) => Api; maybe_get: () => Api | undefined; set: (value: Api) => Api; }',
					exported: false,
				},
			],
			imports: ['@ryanatkn/belt/pkg.js', '$lib/src_json.js', '$lib/context_helpers.js'],
			module_comment:
				'API documentation context\nProvides source metadata and package info for API docs',
			imported_by: ['./api_data.ts'],
		},
		'./api_data.ts': {
			path: 'api_data.ts',
			declarations: [
				{
					name: 'lookup_declaration_by_name',
					kind: 'function',
					doc_comment: 'Look up a declaration by name (flat namespace)',
					summary: 'Look up a declaration by name (flat namespace)',
					examples: [],
					see_also: [],
					source_location: {
						line: 12,
						column: 13,
						end_line: 28,
						end_column: 1,
					},
					type_signature:
						'(name: string): { decl: Src_Module_Declaration; module_path: string; module: Src_Module; } | undefined',
					return_type:
						'{ decl: Src_Module_Declaration; module_path: string; module: Src_Module; } | undefined',
					parameters: [
						{
							name: 'name',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'get_all_declarations',
					kind: 'function',
					doc_comment: 'Get all declarations as a flat list',
					summary: 'Get all declarations as a flat list',
					examples: [],
					see_also: [],
					source_location: {
						line: 33,
						column: 13,
						end_line: 55,
						end_column: 1,
					},
					type_signature:
						'(): { module_path: string; module: Src_Module; decl: Src_Module_Declaration; }[]',
					return_type:
						'{ module_path: string; module: Src_Module; decl: Src_Module_Declaration; }[]',
					parameters: [],
					exported: false,
				},
				{
					name: 'is_known_identifier',
					kind: 'function',
					doc_comment: 'Check if an identifier is documented',
					summary: 'Check if an identifier is documented',
					examples: [],
					see_also: [],
					source_location: {
						line: 60,
						column: 13,
						end_line: 62,
						end_column: 1,
					},
					type_signature: '(name: string): boolean',
					return_type: 'boolean',
					parameters: [
						{
							name: 'name',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'search_declarations',
					kind: 'function',
					doc_comment: 'Search declarations by name (fuzzy match)',
					summary: 'Search declarations by name (fuzzy match)',
					examples: [],
					see_also: [],
					source_location: {
						line: 67,
						column: 13,
						end_line: 107,
						end_column: 1,
					},
					type_signature:
						'(query: string): { module_path: string; module: Src_Module; decl: Src_Module_Declaration; }[]',
					return_type:
						'{ module_path: string; module: Src_Module; decl: Src_Module_Declaration; }[]',
					parameters: [
						{
							name: 'query',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
			],
			imports: ['$lib/api.js', '$lib/src_json.js'],
			module_comment:
				'API documentation data helpers\nFunctions for looking up and searching declarations',
		},
		'./constants.ts': {
			path: 'constants.ts',
			declarations: [
				{
					name: 'MAIN_HEADER_MARGIN_TOP',
					kind: 'variable',
					source_location: {
						line: 3,
						column: 13,
						end_line: 3,
						end_column: 68,
					},
					type_signature: '"calc(60px + var(--space_lg))"',
					exported: false,
				},
			],
			imports: [],
			module_comment:
				'// TODO the 60px is a hack, need `--docs_primary_nav_height` exported or :root values from Fuz -- the --space_lg also needs to be kept in sync',
		},
		'./context_helpers.ts': {
			path: 'context_helpers.ts',
			declarations: [
				{
					name: 'create_context',
					kind: 'function',
					doc_comment:
						"Wraps Svelte's `setContext` and `getContext` for better ergonmics.\nWhen no value is set in the context,\n`get` throws an error and `maybe_get` returns `undefined`.\nIf a `fallback` is provided, the `value` argument to `set` is optional\nand `maybe_get` is omitted from the type.",
					summary:
						"Wraps Svelte's `setContext` and `getContext` for better ergonmics.\nWhen no value is set in the context,\n`get` throws an error and `maybe_get` returns `undefined`.\nIf a `fallback` is provided, the `value` argument to `set` is optional\nand `maybe_get` is omitted from the type.",
					examples: [],
					see_also: [],
					source_location: {
						line: 18,
						column: 0,
						end_line: 21,
						end_column: 2,
					},
					type_signature:
						'<T>(fallback: () => T): { get: () => T; set: (value?: T | undefined) => T; }',
					return_type: '{ get: () => T; set: (value?: T | undefined) => T; }',
					parameters: [
						{
							name: 'fallback',
							type: '() => T',
							optional: false,
						},
					],
					generic_params: ['T'],
					exported: true,
				},
			],
			imports: ['svelte'],
			imported_by: [
				'./api.ts',
				'./contextmenu_state.svelte.ts',
				'./docs_helpers.svelte.ts',
				'./pkg.ts',
				'./themer.svelte.ts',
				'./tome.ts',
				'./tooltip_state.svelte.ts',
			],
		},
		'./contextmenu_helpers.ts': {
			path: 'contextmenu_helpers.ts',
			declarations: [
				{
					name: 'CONTEXTMENU_DEFAULT_OPEN_OFFSET_X',
					kind: 'variable',
					source_location: {
						line: 6,
						column: 13,
						end_line: 6,
						end_column: 51,
					},
					type_signature: '-2',
					exported: false,
				},
				{
					name: 'CONTEXTMENU_DEFAULT_OPEN_OFFSET_Y',
					kind: 'variable',
					source_location: {
						line: 7,
						column: 13,
						end_line: 7,
						end_column: 51,
					},
					type_signature: '-2',
					exported: false,
				},
				{
					name: 'CONTEXTMENU_DEFAULT_BYPASS_WINDOW',
					kind: 'variable',
					source_location: {
						line: 8,
						column: 13,
						end_line: 8,
						end_column: 52,
					},
					type_signature: '750',
					exported: false,
				},
				{
					name: 'CONTEXTMENU_DEFAULT_BYPASS_MOVE_TOLERANCE',
					kind: 'variable',
					source_location: {
						line: 9,
						column: 13,
						end_line: 9,
						end_column: 59,
					},
					type_signature: '11',
					exported: false,
				},
				{
					name: 'CONTEXTMENU_DEFAULT_LONGPRESS_DURATION',
					kind: 'variable',
					source_location: {
						line: 10,
						column: 13,
						end_line: 10,
						end_column: 57,
					},
					type_signature: '633',
					exported: false,
				},
				{
					name: 'CONTEXTMENU_DEFAULT_LONGPRESS_MOVE_TOLERANCE',
					kind: 'variable',
					source_location: {
						line: 11,
						column: 13,
						end_line: 11,
						end_column: 62,
					},
					type_signature: '21',
					exported: false,
				},
				{
					name: 'contextmenu_is_valid_target',
					kind: 'function',
					doc_comment:
						'Check if a target element is valid for contextmenu interactions.\nReturns true if valid and narrows the type to HTMLElement | SVGElement.',
					summary:
						'Check if a target element is valid for contextmenu interactions.\nReturns true if valid and narrows the type to HTMLElement | SVGElement.',
					examples: [],
					see_also: [],
					source_location: {
						line: 17,
						column: 13,
						end_line: 24,
						end_column: 25,
					},
					type_signature:
						'(target: EventTarget | null, shiftKey: boolean): target is HTMLElement | SVGElement',
					return_type: 'boolean',
					parameters: [
						{
							name: 'target',
							type: 'EventTarget | null',
							optional: false,
						},
						{
							name: 'shiftKey',
							type: 'boolean',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'contextmenu_create_keyboard_handlers',
					kind: 'function',
					doc_comment:
						'Creates the keyboard handler map for contextmenu navigation.\nBinds handlers to the provided contextmenu instance.',
					summary:
						'Creates the keyboard handler map for contextmenu navigation.\nBinds handlers to the provided contextmenu instance.',
					examples: [],
					see_also: [],
					source_location: {
						line: 32,
						column: 13,
						end_line: 45,
						end_column: 3,
					},
					type_signature: '(contextmenu: Contextmenu_State): Map<string, () => void>',
					return_type: 'Map<string, () => void>',
					parameters: [
						{
							name: 'contextmenu',
							type: 'Contextmenu_State',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'contextmenu_create_keydown_handler',
					kind: 'function',
					doc_comment:
						'Creates a keydown event handler that uses the provided keyboard handlers map.',
					summary: 'Creates a keydown event handler that uses the provided keyboard handlers map.',
					examples: [],
					see_also: [],
					source_location: {
						line: 50,
						column: 13,
						end_line: 59,
						end_column: 1,
					},
					type_signature:
						'(keyboard_handlers: Map<string, () => void>): (e: KeyboardEvent) => void',
					return_type: '(e: KeyboardEvent) => void',
					parameters: [
						{
							name: 'keyboard_handlers',
							type: 'Map<string, () => void>',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'contextmenu_calculate_constrained_x',
					kind: 'function',
					doc_comment:
						'Calculates the constrained X position for the contextmenu,\nensuring it stays within the layout width.',
					summary:
						'Calculates the constrained X position for the contextmenu,\nensuring it stays within the layout width.',
					examples: [],
					see_also: [],
					source_location: {
						line: 65,
						column: 13,
						end_line: 69,
						end_column: 71,
					},
					type_signature: '(menu_x: number, menu_width: number, layout_width: number): number',
					return_type: 'number',
					parameters: [
						{
							name: 'menu_x',
							type: 'number',
							optional: false,
						},
						{
							name: 'menu_width',
							type: 'number',
							optional: false,
						},
						{
							name: 'layout_width',
							type: 'number',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'contextmenu_calculate_constrained_y',
					kind: 'function',
					doc_comment:
						'Calculates the constrained Y position for the contextmenu,\nensuring it stays within the layout height.',
					summary:
						'Calculates the constrained Y position for the contextmenu,\nensuring it stays within the layout height.',
					examples: [],
					see_also: [],
					source_location: {
						line: 75,
						column: 13,
						end_line: 79,
						end_column: 73,
					},
					type_signature: '(menu_y: number, menu_height: number, layout_height: number): number',
					return_type: 'number',
					parameters: [
						{
							name: 'menu_y',
							type: 'number',
							optional: false,
						},
						{
							name: 'menu_height',
							type: 'number',
							optional: false,
						},
						{
							name: 'layout_height',
							type: 'number',
							optional: false,
						},
					],
					exported: false,
				},
			],
			imports: ['@ryanatkn/belt/dom.js', '$lib/contextmenu_state.svelte.js'],
		},
		'./contextmenu_state.svelte.ts': {
			path: 'contextmenu_state.svelte.ts',
			declarations: [
				{
					name: 'Contextmenu_Params',
					kind: 'type',
					source_location: {
						line: 14,
						column: 0,
						end_line: 19,
						end_column: 59,
					},
					type_signature: 'Contextmenu_Params',
					exported: true,
				},
				{
					name: 'Contextmenu_Activate_Result',
					kind: 'type',
					source_location: {
						line: 21,
						column: 0,
						end_line: 24,
						end_column: 49,
					},
					type_signature: 'Contextmenu_Activate_Result',
					exported: true,
				},
				{
					name: 'Item_State',
					kind: 'type',
					source_location: {
						line: 26,
						column: 0,
						end_line: 26,
						end_column: 53,
					},
					type_signature: 'Item_State',
					exported: true,
				},
				{
					name: 'Entry_State',
					kind: 'class',
					source_location: {
						line: 28,
						column: 0,
						end_line: 49,
						end_column: 1,
					},
					members: [
						{
							name: 'is_menu',
							kind: 'variable',
						},
						{
							name: 'menu',
							kind: 'variable',
						},
						{
							name: 'run',
							kind: 'variable',
						},
						{
							name: 'disabled',
							kind: 'variable',
						},
						{
							name: 'selected',
							kind: 'variable',
						},
						{
							name: 'pending',
							kind: 'variable',
						},
						{
							name: 'error_message',
							kind: 'variable',
						},
						{
							name: 'promise',
							kind: 'variable',
						},
					],
					exported: true,
				},
				{
					name: 'Submenu_State',
					kind: 'class',
					source_location: {
						line: 51,
						column: 0,
						end_line: 63,
						end_column: 1,
					},
					members: [
						{
							name: 'is_menu',
							kind: 'variable',
						},
						{
							name: 'menu',
							kind: 'variable',
						},
						{
							name: 'depth',
							kind: 'variable',
						},
						{
							name: 'selected',
							kind: 'variable',
						},
						{
							name: 'items',
							kind: 'variable',
						},
					],
					exported: true,
				},
				{
					name: 'Root_Menu_State',
					kind: 'class',
					source_location: {
						line: 65,
						column: 0,
						end_line: 71,
						end_column: 1,
					},
					members: [
						{
							name: 'is_menu',
							kind: 'variable',
						},
						{
							name: 'menu',
							kind: 'variable',
						},
						{
							name: 'depth',
							kind: 'variable',
						},
						{
							name: 'items',
							kind: 'variable',
						},
					],
					exported: true,
				},
				{
					name: 'Contextmenu_Run',
					kind: 'type',
					source_location: {
						line: 73,
						column: 0,
						end_line: 75,
						end_column: 40,
					},
					type_signature: 'Contextmenu_Run',
					exported: true,
				},
				{
					name: 'Contextmenu_State_Options',
					kind: 'type',
					source_location: {
						line: 77,
						column: 0,
						end_line: 79,
						end_column: 1,
					},
					type_signature: 'Contextmenu_State_Options',
					exported: true,
				},
				{
					name: 'Contextmenu_State',
					kind: 'class',
					doc_comment:
						'Creates a `contextmenu` store.\nSee usage with `Contextmenu_Root.svelte` and `Contextmenu.svelte`.',
					summary:
						'Creates a `contextmenu` store.\nSee usage with `Contextmenu_Root.svelte` and `Contextmenu.svelte`.',
					examples: [],
					see_also: ['://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event'],
					source_location: {
						line: 87,
						column: 0,
						end_line: 337,
						end_column: 1,
					},
					members: [
						{
							name: 'layout',
							kind: 'variable',
						},
						{
							name: 'has_custom_layout',
							kind: 'variable',
						},
						{
							name: 'opened',
							kind: 'variable',
						},
						{
							name: 'x',
							kind: 'variable',
						},
						{
							name: 'y',
							kind: 'variable',
						},
						{
							name: 'params',
							kind: 'variable',
						},
						{
							name: 'error',
							kind: 'variable',
						},
						{
							name: 'root_menu',
							kind: 'variable',
						},
						{
							name: 'selections',
							kind: 'variable',
						},
						{
							name: 'can_collapse',
							kind: 'variable',
						},
						{
							name: 'can_expand',
							kind: 'variable',
						},
						{
							name: 'can_select_next',
							kind: 'variable',
						},
						{
							name: 'can_select_previous',
							kind: 'variable',
						},
						{
							name: 'can_activate',
							kind: 'variable',
						},
						{
							name: 'open',
							kind: 'function',
						},
						{
							name: 'close',
							kind: 'function',
						},
						{
							name: 'reset_items',
							kind: 'function',
						},
						{
							name: 'activate',
							kind: 'function',
						},
						{
							name: 'activate_selected',
							kind: 'function',
						},
						{
							name: 'select',
							kind: 'function',
						},
						{
							name: 'collapse_selected',
							kind: 'function',
						},
						{
							name: 'expand_selected',
							kind: 'function',
						},
						{
							name: 'select_next',
							kind: 'function',
						},
						{
							name: 'select_previous',
							kind: 'function',
						},
						{
							name: 'select_first',
							kind: 'function',
						},
						{
							name: 'select_last',
							kind: 'function',
						},
						{
							name: 'add_entry',
							kind: 'function',
						},
						{
							name: 'add_submenu',
							kind: 'function',
						},
					],
					exported: true,
				},
				{
					name: 'contextmenu_action',
					kind: 'function',
					source_location: {
						line: 346,
						column: 13,
						end_line: 362,
						end_column: 1,
					},
					type_signature:
						'<T extends Contextmenu_Params, U extends T | Array<T>>(el: HTMLElement | SVGElement, params: U | null | undefined): ActionReturn<U, Record<never, any>> | undefined',
					return_type: 'ActionReturn<U, Record<never, any>> | undefined',
					parameters: [
						{
							name: 'el',
							type: 'HTMLElement | SVGElement',
							optional: false,
						},
						{
							name: 'params',
							type: 'U | null | undefined',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'Open_Contextmenu_Options',
					kind: 'type',
					source_location: {
						line: 366,
						column: 0,
						end_line: 371,
						end_column: 1,
					},
					type_signature: 'Open_Contextmenu_Options',
					exported: true,
				},
				{
					name: 'open_contextmenu',
					kind: 'function',
					doc_comment:
						'Opens the contextmenu, if appropriate,\nquerying the menu items from the DOM starting at the event target.',
					summary:
						'Opens the contextmenu, if appropriate,\nquerying the menu items from the DOM starting at the event target.',
					examples: [],
					see_also: [],
					source_location: {
						line: 383,
						column: 13,
						end_line: 419,
						end_column: 1,
					},
					type_signature:
						'(target: HTMLElement | SVGElement, x: number, y: number, contextmenu: Contextmenu_State, options?: Open_Contextmenu_Options | undefined): boolean',
					return_type: 'boolean',
					parameters: [
						{
							name: 'target',
							type: 'HTMLElement | SVGElement',
							optional: false,
						},
						{
							name: 'x',
							type: 'number',
							optional: false,
						},
						{
							name: 'y',
							type: 'number',
							optional: false,
						},
						{
							name: 'contextmenu',
							type: 'Contextmenu_State',
							optional: false,
						},
						{
							name: 'options',
							type: 'Open_Contextmenu_Options | undefined',
							optional: true,
						},
					],
					exported: false,
				},
				{
					name: 'contextmenu_context',
					kind: 'variable',
					source_location: {
						line: 469,
						column: 13,
						end_line: 469,
						end_column: 70,
					},
					type_signature:
						'{ get: (error_message?: string | undefined) => Contextmenu_State; maybe_get: () => Contextmenu_State | undefined; set: (value: Contextmenu_State) => Contextmenu_State; }',
					exported: false,
				},
				{
					name: 'contextmenu_submenu_context',
					kind: 'variable',
					source_location: {
						line: 471,
						column: 13,
						end_line: 471,
						end_column: 74,
					},
					type_signature:
						'{ get: (error_message?: string | undefined) => Submenu_State; maybe_get: () => Submenu_State | undefined; set: (value: Submenu_State) => Submenu_State; }',
					exported: false,
				},
				{
					name: 'contextmenu_dimensions_context',
					kind: 'variable',
					source_location: {
						line: 473,
						column: 13,
						end_line: 473,
						end_column: 84,
					},
					type_signature:
						'{ get: () => Dimensions; set: (value?: Dimensions | undefined) => Dimensions; }',
					exported: false,
				},
				{
					name: 'contextmenu_check_global_root',
					kind: 'function',
					doc_comment:
						'Registers a contextmenu root and warns if multiple non-scoped roots are detected.\nOnly active in development mode. Automatically handles cleanup on unmount.',
					summary:
						'Registers a contextmenu root and warns if multiple non-scoped roots are detected.\nOnly active in development mode. Automatically handles cleanup on unmount.',
					examples: [],
					see_also: [],
					source_location: {
						line: 484,
						column: 13,
						end_line: 507,
						end_column: 1,
					},
					type_signature: '(get_scoped: () => boolean): void',
					return_type: 'void',
					parameters: [
						{
							name: 'get_scoped',
							type: '() => boolean',
							optional: false,
						},
					],
					exported: false,
				},
			],
			imports: [
				'svelte',
				'@ryanatkn/belt/result.js',
				'@ryanatkn/belt/async.js',
				'svelte/action',
				'esm-env',
				'svelte/elements',
				'@ryanatkn/belt/object.js',
				'$lib/dimensions.svelte.js',
				'$lib/context_helpers.js',
			],
			imported_by: ['./contextmenu_helpers.ts', './declaration_contextmenu.ts'],
		},
		'./csp.ts': {
			path: 'csp.ts',
			declarations: [
				{
					name: 'create_csp_directives',
					kind: 'function',
					doc_comment:
						"This is designed for compatibility with SvelteKit\nand maps to the `KitConfig` `directives` option.\nThe goal is to provide an ergonomic, modern, and safe API\nfor Content Security Policy (CSP) creation\nthat's simple to write and audit, and isn't error-prone.\n\nThings like validation and rendering to a string\nare out of scope and left to SvelteKit.",
					summary:
						"This is designed for compatibility with SvelteKit\nand maps to the `KitConfig` `directives` option.\nThe goal is to provide an ergonomic, modern, and safe API\nfor Content Security Policy (CSP) creation\nthat's simple to write and audit, and isn't error-prone.",
					examples: [],
					see_also: [],
					source_location: {
						line: 60,
						column: 0,
						end_line: 173,
						end_column: 1,
					},
					type_signature: '(options?: Create_Csp_Directives_Options): Csp_Directives',
					return_type: 'Csp_Directives',
					parameters: [
						{
							name: 'options',
							type: 'Create_Csp_Directives_Options',
							optional: false,
						},
					],
					exported: true,
				},
				{
					name: 'Create_Csp_Directives_Options',
					kind: 'type',
					source_location: {
						line: 5,
						column: 0,
						end_line: 48,
						end_column: 1,
					},
					type_signature: 'Create_Csp_Directives_Options',
					exported: true,
				},
				{
					name: 'Csp_Directive',
					kind: 'type',
					source_location: {
						line: 175,
						column: 0,
						end_line: 175,
						end_column: 49,
					},
					type_signature: 'keyof Csp_Directives',
					exported: true,
				},
				{
					name: 'parse_csp_directive',
					kind: 'function',
					source_location: {
						line: 177,
						column: 13,
						end_line: 180,
						end_column: 8,
					},
					type_signature: '(directive: unknown): keyof Csp_Directives | null',
					return_type: 'keyof Csp_Directives | null',
					parameters: [
						{
							name: 'directive',
							type: 'unknown',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'Csp_Directive_Value',
					kind: 'type',
					source_location: {
						line: 182,
						column: 0,
						end_line: 182,
						end_column: 86,
					},
					type_signature: 'Csp_Directive_Value<T>',
					generic_params: ['T extends Csp_Directive'],
					exported: true,
				},
				{
					name: 'csp_trust_levels',
					kind: 'variable',
					source_location: {
						line: 184,
						column: 13,
						end_line: 184,
						end_column: 66,
					},
					type_signature: 'readonly ["low", "medium", "high"]',
					exported: false,
				},
				{
					name: 'csp_trust_level_value',
					kind: 'variable',
					doc_comment:
						'Numeric values for CSP trust levels, `csp_trust_levels`.\nLower is less trusted.\nIncludes `undefined` in the type for safety.',
					summary:
						'Numeric values for CSP trust levels, `csp_trust_levels`.\nLower is less trusted.\nIncludes `undefined` in the type for safety.',
					examples: [],
					see_also: [],
					source_location: {
						line: 191,
						column: 13,
						end_line: 195,
						end_column: 1,
					},
					type_signature: 'Record<"low" | "medium" | "high", number | undefined>',
					exported: false,
				},
				{
					name: 'Csp_Trust_Level',
					kind: 'type',
					doc_comment:
						"Trust levels for CSP sources.\n\nWith the base defaults, trust levels roughly correspond to:\n\n- `low` â€“ Passive resources only (no script execution, no styling or UI control).\n\t\tExamples: `img-src`, `font-src`.\n- `medium` â€“ Content that may affect layout, styling, or embed external browsing contexts,\n   but cannot directly run code in the page's JS execution environment or\n\t\tperform other high-risk actions. Examples: `style-src`, `frame-src`, `frame-ancestors`.\n- `high` â€“ Sources that can execute code in the page's context or open powerful network\n   channels. Examples: `script-src`, `connect-src`, `child-src`.\n- `null` â€“ No trust. This is used for directives that don't support sources.",
					summary: 'Trust levels for CSP sources.',
					examples: [],
					see_also: [],
					source_location: {
						line: 212,
						column: 0,
						end_line: 212,
						end_column: 69,
					},
					type_signature: '"low" | "medium" | "high"',
					exported: true,
				},
				{
					name: 'parse_csp_trust_level',
					kind: 'function',
					doc_comment: 'Validates and extracts a CSP trust level from an unknown value.',
					summary: 'Validates and extracts a CSP trust level from an unknown value.',
					examples: [],
					see_also: [],
					source_location: {
						line: 217,
						column: 13,
						end_line: 218,
						end_column: 76,
					},
					type_signature: '(trust: unknown): "low" | "medium" | "high" | null',
					return_type: '"low" | "medium" | "high" | null',
					parameters: [
						{
							name: 'trust',
							type: 'unknown',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'Csp_Source_Spec',
					kind: 'type',
					source_location: {
						line: 220,
						column: 0,
						end_line: 224,
						end_column: 1,
					},
					type_signature: 'Csp_Source_Spec',
					exported: true,
				},
				{
					name: 'Csp_Directive_Spec',
					kind: 'type',
					source_location: {
						line: 226,
						column: 0,
						end_line: 230,
						end_column: 1,
					},
					type_signature: 'Csp_Directive_Spec',
					exported: true,
				},
				{
					name: 'is_csp_trusted',
					kind: 'function',
					doc_comment:
						"Determines if a granted trust level is sufficient to satisfy a required trust level.\n\nTrust levels have the following hierarchy:\n- 'high' sources can be used in high, medium, and low trust directives (highest privilege)\n- 'medium' sources can be used in medium and low trust directives\n- 'low' sources can only be used in low trust directives (lowest privilege)",
					summary:
						'Determines if a granted trust level is sufficient to satisfy a required trust level.',
					examples: [],
					see_also: [],
					source_location: {
						line: 240,
						column: 13,
						end_line: 254,
						end_column: 1,
					},
					type_signature:
						'(required_trust: "low" | "medium" | "high" | null | undefined, granted_trust: "low" | "medium" | "high" | null | undefined): boolean',
					return_type: 'boolean',
					parameters: [
						{
							name: 'required_trust',
							type: '"low" | "medium" | "high" | null | undefined',
							optional: false,
						},
						{
							name: 'granted_trust',
							type: '"low" | "medium" | "high" | null | undefined',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'COLOR_SCHEME_SCRIPT_HASH',
					kind: 'variable',
					source_location: {
						line: 263,
						column: 13,
						end_line: 263,
						end_column: 93,
					},
					type_signature: '"sha256-QOxqn7EUzb3ydF9SALJoJGWSvywW9R0AfTDSenB83Z8="',
					exported: false,
				},
				{
					name: 'csp_directive_value_defaults',
					kind: 'variable',
					doc_comment:
						'The base CSP directive defaults.\nPrioritizes safety but loosens around media and styles, relying on defense-in-depth.\nCustomizable via `Create_Csp_Directives_Options.defaults`.',
					summary:
						'The base CSP directive defaults.\nPrioritizes safety but loosens around media and styles, relying on defense-in-depth.\nCustomizable via `Create_Csp_Directives_Options.defaults`.',
					examples: [],
					see_also: [],
					source_location: {
						line: 270,
						column: 13,
						end_line: 298,
						end_column: 1,
					},
					type_signature:
						'Record<keyof Csp_Directives, boolean | (Csp_Source | Csp_Action_Source)[] | Csp_Sources | (`${string}.${string}` | "localhost" | ... 17 more ... | "none")[] | string[] | "script"[] | ("allow-downloads-without-user-activation" | ... 11 more ... | "allow-top-navigation-by-user-activation")[] | null>',
					exported: false,
				},
				{
					name: 'csp_directive_required_trust_defaults',
					kind: 'variable',
					doc_comment:
						"Sources that meet this trust requirement are included for it by default.\nIf null, no trusted sources are added to the directive automatically.\nDirectives that don't support sources or default to `['none']` are null.\n\nFeedback is welcome, please see the issues - https://github.com/ryanatkn/fuz/issues",
					summary:
						"Sources that meet this trust requirement are included for it by default.\nIf null, no trusted sources are added to the directive automatically.\nDirectives that don't support sources or default to `['none']` are null.",
					examples: [],
					see_also: [],
					source_location: {
						line: 307,
						column: 13,
						end_line: 333,
						end_column: 2,
					},
					type_signature: 'Record<keyof Csp_Directives, "low" | "medium" | "high" | null>',
					exported: false,
				},
				{
					name: 'csp_directive_specs',
					kind: 'variable',
					doc_comment:
						'Static data descriptors for the CSP directives.\nFuz excludes deprecated directives, so those are intentionally omitted,\nbut any newer missing directives are bugs.\n\nCould be moved to `csp.ts` but is currently here to keep that module smaller.',
					summary:
						'Static data descriptors for the CSP directives.\nFuz excludes deprecated directives, so those are intentionally omitted,\nbut any newer missing directives are bugs.',
					examples: [],
					see_also: [
						'://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Content-Security-Policy',
					],
					source_location: {
						line: 344,
						column: 13,
						end_line: 480,
						end_column: 1,
					},
					type_signature: 'Csp_Directive_Spec[]',
					exported: false,
				},
				{
					name: 'csp_directive_spec_by_name',
					kind: 'variable',
					source_location: {
						line: 482,
						column: 13,
						end_line: 484,
						end_column: 1,
					},
					type_signature: 'Map<keyof Csp_Directives, Csp_Directive_Spec>',
					exported: false,
				},
				{
					name: 'Csp_Action_Source',
					kind: 'type',
					source_location: {
						line: 514,
						column: 0,
						end_line: 514,
						end_column: 67,
					},
					type_signature: 'Csp_Action_Source',
					exported: true,
				},
				{
					name: 'Csp_Base_Source',
					kind: 'type',
					source_location: {
						line: 515,
						column: 0,
						end_line: 521,
						end_column: 10,
					},
					type_signature: 'Csp_Base_Source',
					exported: true,
				},
				{
					name: 'Csp_Crypto_Source',
					kind: 'type',
					source_location: {
						line: 522,
						column: 0,
						end_line: 522,
						end_column: 88,
					},
					type_signature:
						'`nonce-${string}` | `sha256-${string}` | `sha384-${string}` | `sha512-${string}`',
					exported: true,
				},
				{
					name: 'Csp_Frame_Source',
					kind: 'type',
					source_location: {
						line: 523,
						column: 0,
						end_line: 523,
						end_column: 85,
					},
					type_signature: 'Csp_Frame_Source',
					exported: true,
				},
				{
					name: 'Csp_Host_Name_Scheme',
					kind: 'type',
					source_location: {
						line: 524,
						column: 0,
						end_line: 524,
						end_column: 71,
					},
					type_signature: 'Csp_Host_Name_Scheme',
					exported: true,
				},
				{
					name: 'Csp_Host_Source',
					kind: 'type',
					source_location: {
						line: 525,
						column: 0,
						end_line: 526,
						end_column: 73,
					},
					type_signature:
						'`${string}.${string}` | "localhost" | `${string}.${string}:${number}` | `${string}.${string}:*` | `localhost:${number}` | "localhost:*" | `${string}://${string}.${string}` | `${string}://${string}.${string}:${number}` | `${string}://${string}.${string}:*` | `${string}://localhost` | `${string}://localhost:${number}`...',
					exported: true,
				},
				{
					name: 'Csp_Host_Protocol_Schemes',
					kind: 'type',
					source_location: {
						line: 527,
						column: 0,
						end_line: 527,
						end_column: 60,
					},
					type_signature: 'Csp_Host_Protocol_Schemes',
					exported: true,
				},
				{
					name: 'Csp_Port_Scheme',
					kind: 'type',
					source_location: {
						line: 528,
						column: 0,
						end_line: 528,
						end_column: 55,
					},
					type_signature: 'Csp_Port_Scheme',
					exported: true,
				},
				{
					name: 'Csp_Scheme_Source',
					kind: 'type',
					source_location: {
						line: 529,
						column: 0,
						end_line: 535,
						end_column: 17,
					},
					type_signature: 'Csp_Scheme_Source',
					exported: true,
				},
				{
					name: 'Csp_Source',
					kind: 'type',
					source_location: {
						line: 536,
						column: 0,
						end_line: 536,
						end_column: 99,
					},
					type_signature: 'Csp_Source',
					exported: true,
				},
				{
					name: 'Csp_Sources',
					kind: 'type',
					source_location: {
						line: 537,
						column: 0,
						end_line: 537,
						end_column: 44,
					},
					type_signature: 'Csp_Sources',
					exported: true,
				},
				{
					name: 'Csp_Directives',
					kind: 'type',
					source_location: {
						line: 539,
						column: 0,
						end_line: 578,
						end_column: 1,
					},
					type_signature: 'Csp_Directives',
					exported: true,
				},
			],
			imports: ['@ryanatkn/belt/types.js'],
			imported_by: ['./csp_of_ryanatkn.ts'],
		},
		'./csp_of_ryanatkn.ts': {
			path: 'csp_of_ryanatkn.ts',
			declarations: [
				{
					name: 'csp_trusted_sources_of_ryanatkn',
					kind: 'variable',
					doc_comment: 'List of trusted sources owned by ryanatkn (me, ryanatkn.com).',
					summary: 'List of trusted sources owned by ryanatkn (me, ryanatkn.com).',
					examples: [],
					see_also: [],
					source_location: {
						line: 6,
						column: 13,
						end_line: 16,
						end_column: 1,
					},
					type_signature: 'Csp_Source_Spec[]',
					exported: false,
				},
			],
			imports: ['$lib/csp.js'],
		},
		'./declaration_contextmenu.ts': {
			path: 'declaration_contextmenu.ts',
			declarations: [
				{
					name: 'create_declaration_contextmenu',
					kind: 'function',
					doc_comment: 'Create contextmenu entries for a declaration',
					summary: 'Create contextmenu entries for a declaration',
					examples: [],
					see_also: [],
					source_location: {
						line: 8,
						column: 13,
						end_line: 80,
						end_column: 1,
					},
					type_signature:
						'(decl: Src_Module_Declaration, module_path: string, pkg_name: string, repo_url?: string | undefined, homepage_url?: string | null | undefined): Contextmenu_Params[]',
					return_type: 'Contextmenu_Params[]',
					parameters: [
						{
							name: 'decl',
							type: 'Src_Module_Declaration',
							optional: false,
						},
						{
							name: 'module_path',
							type: 'string',
							optional: false,
						},
						{
							name: 'pkg_name',
							type: 'string',
							optional: false,
						},
						{
							name: 'repo_url',
							type: 'string | undefined',
							optional: true,
						},
						{
							name: 'homepage_url',
							type: 'string | null | undefined',
							optional: true,
						},
					],
					exported: false,
				},
			],
			imports: ['$app/paths', '$lib/src_json.js', '$lib/contextmenu_state.svelte.js'],
		},
		'./dialog.ts': {
			path: 'dialog.ts',
			declarations: [
				{
					name: 'to_dialog_params',
					kind: 'function',
					doc_comment:
						"This helper function is needed to construct `Dialog_Params` with type safety.\nIt uses TypeScript's inferred generics for functions,\nwhich do not work for plain objects as of v5.0.4.\n* `ContextmenuParams` uses a similar strategy.",
					summary:
						"This helper function is needed to construct `Dialog_Params` with type safety.\nIt uses TypeScript's inferred generics for functions,\nwhich do not work for plain objects as of v5.0.4.\n* `ContextmenuParams` uses a similar strategy.",
					examples: [],
					see_also: [],
					source_location: {
						line: 11,
						column: 13,
						end_line: 19,
						end_column: 2,
					},
					type_signature:
						'<T extends Component<any>>(Component: T, props: ComponentProps<T>, dialog_props?: Partial<Record<string, any>> | undefined): Dialog_Params<T>',
					return_type: 'Dialog_Params<T>',
					parameters: [
						{
							name: 'Component',
							type: 'T',
							optional: false,
						},
						{
							name: 'props',
							type: 'ComponentProps<T>',
							optional: false,
						},
						{
							name: 'dialog_props',
							type: 'Partial<Record<string, any>> | undefined',
							optional: true,
						},
					],
					exported: false,
				},
				{
					name: 'Dialog_Params',
					kind: 'type',
					doc_comment:
						'This pattern is based on:\nhttps://github.com/ivanhofer/sveltekit-typescript-showcase/blob/main/src/01-props/09-svelte-component/Component.svelte\nThe main limitation is that the generic cannot be inferred automatically,\nso we use `to_dialog_params` to construct instances in most cases.\nDefinining `Dialog_Params` with no concrete `T` lacks typechecking for `props`.',
					summary:
						'This pattern is based on:\nhttps://github.com/ivanhofer/sveltekit-typescript-showcase/blob/main/src/01-props/09-svelte-component/Component.svelte\nThe main limitation is that the generic cannot be inferred automatically,\nso we use `to_dialog_params` to construct instances in most cases.\nDefinining `Dialog_Params` with no concrete `T` lacks typechecking for `props`.',
					examples: [],
					see_also: [],
					source_location: {
						line: 28,
						column: 0,
						end_line: 32,
						end_column: 1,
					},
					type_signature: 'Dialog_Params<T>',
					generic_params: ['T extends Component<any> = Component<any>'],
					exported: true,
				},
				{
					name: 'Dialog_Layout',
					kind: 'type',
					source_location: {
						line: 34,
						column: 0,
						end_line: 34,
						end_column: 48,
					},
					type_signature: 'Dialog_Layout',
					exported: true,
				},
				{
					name: 'dialog_layouts',
					kind: 'variable',
					source_location: {
						line: 35,
						column: 13,
						end_line: 35,
						end_column: 72,
					},
					type_signature: 'Dialog_Layout[]',
					exported: false,
				},
			],
			imports: ['svelte', '$lib/Dialog.svelte'],
		},
		'./dimensions.svelte.ts': {
			path: 'dimensions.svelte.ts',
			declarations: [
				{
					name: 'Dimensions',
					kind: 'class',
					source_location: {
						line: 1,
						column: 0,
						end_line: 4,
						end_column: 1,
					},
					members: [
						{
							name: 'width',
							kind: 'variable',
						},
						{
							name: 'height',
							kind: 'variable',
						},
					],
					exported: true,
				},
			],
			imports: [],
			imported_by: ['./contextmenu_state.svelte.ts'],
		},
		'./docs_helpers.svelte.ts': {
			path: 'docs_helpers.svelte.ts',
			declarations: [
				{
					name: 'DEFAULT_LIBRARY_PATH',
					kind: 'variable',
					source_location: {
						line: 7,
						column: 13,
						end_line: 7,
						end_column: 43,
					},
					type_signature: '"/docs"',
					exported: false,
				},
				{
					name: 'get_next_docs_link_order',
					kind: 'function',
					source_location: {
						line: 12,
						column: 13,
						end_line: 12,
						end_column: 78,
					},
					type_signature: '(): number',
					return_type: 'number',
					parameters: [],
					exported: false,
				},
				{
					name: 'reset_docs_link_order',
					kind: 'function',
					source_location: {
						line: 15,
						column: 13,
						end_line: 17,
						end_column: 1,
					},
					type_signature: '(): void',
					return_type: 'void',
					parameters: [],
					exported: false,
				},
				{
					name: 'to_docs_path_info',
					kind: 'function',
					source_location: {
						line: 19,
						column: 13,
						end_line: 28,
						end_column: 1,
					},
					type_signature:
						'(slug: string, pathname: string, root_path?: string): { path: string; path_is_selected: boolean; path_segment: string | undefined; }',
					return_type:
						'{ path: string; path_is_selected: boolean; path_segment: string | undefined; }',
					parameters: [
						{
							name: 'slug',
							type: 'string',
							optional: false,
						},
						{
							name: 'pathname',
							type: 'string',
							optional: false,
						},
						{
							name: 'root_path',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'docs_links_context',
					kind: 'variable',
					source_location: {
						line: 30,
						column: 13,
						end_line: 30,
						end_column: 72,
					},
					type_signature:
						'{ get: () => Docs_Links; set: (value?: Docs_Links | undefined) => Docs_Links; }',
					exported: false,
				},
				{
					name: 'Docs_Link_Tag',
					kind: 'type',
					source_location: {
						line: 32,
						column: 0,
						end_line: 32,
						end_column: 40,
					},
					type_signature: 'Docs_Link_Tag',
					exported: true,
				},
				{
					name: 'Docs_Link',
					kind: 'type',
					source_location: {
						line: 34,
						column: 0,
						end_line: 40,
						end_column: 1,
					},
					type_signature: 'Docs_Link',
					exported: true,
				},
				{
					name: 'Docs_Links',
					kind: 'class',
					source_location: {
						line: 42,
						column: 0,
						end_line: 88,
						end_column: 1,
					},
					members: [
						{
							name: 'root_path',
							kind: 'variable',
						},
						{
							name: 'links',
							kind: 'variable',
						},
						{
							name: '#slug_to_order',
							kind: 'variable',
						},
						{
							name: '#next_id',
							kind: 'variable',
						},
						{
							name: 'docs_links',
							kind: 'variable',
						},
						{
							name: 'slugs_onscreen',
							kind: 'variable',
						},
						{
							name: 'add',
							kind: 'function',
						},
						{
							name: 'remove',
							kind: 'function',
						},
					],
					exported: true,
				},
			],
			imports: [
				'$app/paths',
				'svelte/reactivity',
				'@ryanatkn/belt/string.js',
				'$lib/context_helpers.js',
			],
			imported_by: ['./tome.ts'],
		},
		'./helpers.ts': {
			path: 'helpers.ts',
			declarations: [
				{
					name: 'render_value_to_string',
					kind: 'function',
					doc_comment: 'Renders any value to a string representation',
					summary: 'Renders any value to a string representation',
					examples: [],
					see_also: [],
					source_location: {
						line: 7,
						column: 13,
						end_line: 16,
						end_column: 1,
					},
					type_signature: '(value: unknown): string',
					return_type: 'string',
					parameters: [
						{
							name: 'value',
							type: 'unknown',
							optional: false,
						},
					],
					exported: false,
				},
			],
			imports: [],
			module_comment:
				'Renders any value to a string representation\n\n@param value Any JS value to stringify\n@returns A string representation of the value',
			imported_by: [
				'./api.ts',
				'./contextmenu_state.svelte.ts',
				'./docs_helpers.svelte.ts',
				'./pkg.ts',
				'./svelte_helpers.ts',
				'./themer.svelte.ts',
				'./tome.ts',
				'./tooltip_state.svelte.ts',
			],
		},
		'./intersect.ts': {
			path: 'intersect.ts',
			declarations: [
				{
					name: 'Intersect_Params',
					kind: 'type',
					source_location: {
						line: 3,
						column: 0,
						end_line: 24,
						end_column: 1,
					},
					type_signature: 'Intersect_Params',
					exported: true,
				},
				{
					name: 'Intersect_Params_Or_Callback',
					kind: 'type',
					source_location: {
						line: 26,
						column: 0,
						end_line: 26,
						end_column: 75,
					},
					type_signature: 'Intersect_Params_Or_Callback',
					exported: true,
				},
				{
					name: 'intersect',
					kind: 'function',
					source_location: {
						line: 29,
						column: 13,
						end_line: 98,
						end_column: 1,
					},
					type_signature:
						'<Node extends HTMLElement | SVGElement>(node: Node, parameter: Intersect_Params_Or_Callback | null): void | ActionReturn<Intersect_Params_Or_Callback | null, Record<...>>',
					return_type:
						'void | ActionReturn<Intersect_Params_Or_Callback | null, Record<never, any>>',
					parameters: [
						{
							name: 'args',
							type: '[node: Node, parameter: Intersect_Params_Or_Callback | null]',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'On_Intersect',
					kind: 'type',
					source_location: {
						line: 101,
						column: 0,
						end_line: 101,
						end_column: 60,
					},
					type_signature: 'On_Intersect',
					exported: true,
				},
				{
					name: 'Intersect_State',
					kind: 'type',
					source_location: {
						line: 103,
						column: 0,
						end_line: 109,
						end_column: 1,
					},
					type_signature: 'Intersect_State',
					exported: true,
				},
				{
					name: 'On_Disconnect',
					kind: 'type',
					source_location: {
						line: 112,
						column: 0,
						end_line: 112,
						end_column: 62,
					},
					type_signature: 'On_Disconnect',
					exported: true,
				},
				{
					name: 'Disconnect_State',
					kind: 'type',
					source_location: {
						line: 114,
						column: 0,
						end_line: 119,
						end_column: 1,
					},
					type_signature: 'Disconnect_State',
					exported: true,
				},
			],
			imports: ['svelte/action'],
		},
		'./logos.ts': {
			path: 'logos.ts',
			declarations: [
				{
					name: 'zzz_logo',
					kind: 'variable',
					source_location: {
						line: 22,
						column: 13,
						end_line: 36,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'gro_logo',
					kind: 'variable',
					source_location: {
						line: 38,
						column: 13,
						end_line: 70,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'fuz_logo',
					kind: 'variable',
					source_location: {
						line: 72,
						column: 13,
						end_line: 80,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'moss_logo',
					kind: 'variable',
					source_location: {
						line: 82,
						column: 13,
						end_line: 87,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'belt_logo',
					kind: 'variable',
					source_location: {
						line: 89,
						column: 13,
						end_line: 113,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'fuz_code_logo',
					kind: 'variable',
					source_location: {
						line: 115,
						column: 13,
						end_line: 119,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'fuz_blog_logo',
					kind: 'variable',
					source_location: {
						line: 121,
						column: 13,
						end_line: 125,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'fuz_mastodon_logo',
					kind: 'variable',
					source_location: {
						line: 127,
						column: 13,
						end_line: 131,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'fuz_gitops_logo',
					kind: 'variable',
					source_location: {
						line: 133,
						column: 13,
						end_line: 137,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'fuz_template_logo',
					kind: 'variable',
					source_location: {
						line: 139,
						column: 13,
						end_line: 147,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'webdevladder_logo',
					kind: 'variable',
					source_location: {
						line: 149,
						column: 13,
						end_line: 163,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'earbetter_logo',
					kind: 'variable',
					source_location: {
						line: 165,
						column: 13,
						end_line: 173,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'spiderspace_logo',
					kind: 'variable',
					source_location: {
						line: 175,
						column: 13,
						end_line: 235,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'github_logo',
					kind: 'variable',
					source_location: {
						line: 237,
						column: 13,
						end_line: 248,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'mdn_logo',
					kind: 'variable',
					source_location: {
						line: 250,
						column: 13,
						end_line: 258,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'chatgpt_logo',
					kind: 'variable',
					source_location: {
						line: 260,
						column: 13,
						end_line: 267,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'claude_logo',
					kind: 'variable',
					source_location: {
						line: 269,
						column: 13,
						end_line: 277,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
				{
					name: 'gemini_logo',
					kind: 'variable',
					source_location: {
						line: 279,
						column: 13,
						end_line: 302,
						end_column: 20,
					},
					type_signature: 'Svg_Data',
					exported: false,
				},
			],
			imports: ['$lib/Svg.svelte'],
		},
		'./pkg.ts': {
			path: 'pkg.ts',
			declarations: [
				{
					name: 'pkg_context',
					kind: 'variable',
					source_location: {
						line: 5,
						column: 13,
						end_line: 5,
						end_column: 48,
					},
					type_signature:
						'{ get: (error_message?: string | undefined) => Pkg; maybe_get: () => Pkg | undefined; set: (value: Pkg) => Pkg; }',
					exported: false,
				},
			],
			imports: ['@ryanatkn/belt/pkg.js', '$lib/context_helpers.js'],
		},
		'./rune_helpers.svelte.ts': {
			path: 'rune_helpers.svelte.ts',
			declarations: [
				{
					name: 'effect_with_count',
					kind: 'function',
					doc_comment:
						'Runs `fn` in an `$effect`, passing `true` as the `skip` argument for the first `count` runs.\nCalls `fn` even when skipping so callers can read any dependent signals.',
					summary:
						'Runs `fn` in an `$effect`, passing `true` as the `skip` argument for the first `count` runs.\nCalls `fn` even when skipping so callers can read any dependent signals.',
					examples: [],
					see_also: [],
					source_location: {
						line: 5,
						column: 13,
						end_line: 10,
						end_column: 1,
					},
					type_signature: '(fn: (count: number) => void, initial?: number): void',
					return_type: 'void',
					parameters: [
						{
							name: 'fn',
							type: '(count: number) => void',
							optional: false,
						},
						{
							name: 'initial',
							type: 'number',
							optional: false,
						},
					],
					exported: false,
				},
			],
			imports: [],
			module_comment:
				'Runs `fn` in an `$effect`, passing `true` as the `skip` argument for the first `count` runs.\nCalls `fn` even when skipping so callers can read any dependent signals.',
		},
		'./src_json.ts': {
			path: 'src_json.ts',
			declarations: [
				{
					name: 'Src_Module_Declaration_Kind',
					kind: 'type',
					doc_comment: 'Source code metadata types\nInlined from',
					summary: 'Source code metadata types\nInlined from',
					examples: [],
					see_also: [],
					source_location: {
						line: 6,
						column: 0,
						end_line: 13,
						end_column: 9,
					},
					type_signature: 'Src_Module_Declaration_Kind',
					exported: true,
				},
				{
					name: 'Parameter_Info',
					kind: 'type',
					doc_comment: 'Parameter information for functions and methods',
					summary: 'Parameter information for functions and methods',
					examples: [],
					see_also: [],
					source_location: {
						line: 18,
						column: 0,
						end_line: 24,
						end_column: 1,
					},
					type_signature: 'Parameter_Info',
					exported: true,
				},
				{
					name: 'Component_Prop_Info',
					kind: 'type',
					doc_comment: 'Component prop information for Svelte components',
					summary: 'Component prop information for Svelte components',
					examples: [],
					see_also: [],
					source_location: {
						line: 29,
						column: 0,
						end_line: 35,
						end_column: 1,
					},
					type_signature: 'Component_Prop_Info',
					exported: true,
				},
				{
					name: 'Source_Location',
					kind: 'type',
					doc_comment: 'Source location information within a file',
					summary: 'Source location information within a file',
					examples: [],
					see_also: [],
					source_location: {
						line: 40,
						column: 0,
						end_line: 45,
						end_column: 1,
					},
					type_signature: 'Source_Location',
					exported: true,
				},
				{
					name: 'Src_Module_Declaration',
					kind: 'type',
					doc_comment: 'Declaration metadata with rich TypeScript/JSDoc information',
					summary: 'Declaration metadata with rich TypeScript/JSDoc information',
					examples: [],
					see_also: [],
					source_location: {
						line: 50,
						column: 0,
						end_line: 92,
						end_column: 1,
					},
					type_signature: 'Src_Module_Declaration',
					exported: true,
				},
				{
					name: 'Src_Module',
					kind: 'type',
					doc_comment: 'Module information with metadata',
					summary: 'Module information with metadata',
					examples: [],
					see_also: [],
					source_location: {
						line: 97,
						column: 0,
						end_line: 111,
						end_column: 1,
					},
					type_signature: 'Src_Module',
					exported: true,
				},
				{
					name: 'Src_Modules',
					kind: 'type',
					doc_comment: 'Collection of modules indexed by path',
					summary: 'Collection of modules indexed by path',
					examples: [],
					see_also: [],
					source_location: {
						line: 116,
						column: 0,
						end_line: 116,
						end_column: 53,
					},
					type_signature: 'Src_Modules',
					exported: true,
				},
				{
					name: 'Src_Json',
					kind: 'type',
					doc_comment: 'Top-level source metadata',
					summary: 'Top-level source metadata',
					examples: [],
					see_also: [
						'://github.com/ryanatkn/gro/blob/main/src/docs/gro_plugin_sveltekit_app.md#well-known-src',
					],
					source_location: {
						line: 122,
						column: 0,
						end_line: 129,
						end_column: 1,
					},
					type_signature: 'Src_Json',
					exported: true,
				},
				{
					name: 'get_declaration_display_name',
					kind: 'function',
					doc_comment: "Helper to get a declaration's display name",
					summary: "Helper to get a declaration's display name",
					examples: [],
					see_also: [],
					source_location: {
						line: 134,
						column: 13,
						end_line: 139,
						end_column: 1,
					},
					type_signature: '(decl: Src_Module_Declaration): string',
					return_type: 'string',
					parameters: [
						{
							name: 'decl',
							type: 'Src_Module_Declaration',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'get_type_summary',
					kind: 'function',
					doc_comment: 'Helper to get a short type summary for tooltips',
					summary: 'Helper to get a short type summary for tooltips',
					examples: [],
					see_also: [],
					source_location: {
						line: 144,
						column: 13,
						end_line: 153,
						end_column: 1,
					},
					type_signature: '(decl: Src_Module_Declaration): string | undefined',
					return_type: 'string | undefined',
					parameters: [
						{
							name: 'decl',
							type: 'Src_Module_Declaration',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'generate_import_statement',
					kind: 'function',
					doc_comment: 'Generate import statement for a declaration',
					summary: 'Generate import statement for a declaration',
					examples: [],
					see_also: [],
					source_location: {
						line: 158,
						column: 13,
						end_line: 177,
						end_column: 1,
					},
					type_signature:
						'(decl: Src_Module_Declaration, module_path: string, pkg_name: string): string',
					return_type: 'string',
					parameters: [
						{
							name: 'decl',
							type: 'Src_Module_Declaration',
							optional: false,
						},
						{
							name: 'module_path',
							type: 'string',
							optional: false,
						},
						{
							name: 'pkg_name',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
			],
			imports: [],
			module_comment:
				'Source code metadata types\nInlined from @ryanatkn/belt with extensions for documentation',
			imported_by: [
				'./api.ts',
				'./api_data.ts',
				'./declaration_contextmenu.ts',
				'./svelte_helpers.ts',
				'./ts_helpers.ts',
			],
		},
		'./storage.ts': {
			path: 'storage.ts',
			declarations: [
				{
					name: 'save_to_storage',
					kind: 'function',
					doc_comment: 'Utility function to save a value to `localStorage`.',
					summary: 'Utility function to save a value to `localStorage`.',
					examples: [],
					see_also: [],
					source_location: {
						line: 8,
						column: 13,
						end_line: 17,
						end_column: 1,
					},
					type_signature: '(key: string, value: any, is_json?: boolean): void',
					return_type: 'void',
					parameters: [
						{
							name: 'key',
							type: 'string',
							optional: false,
						},
						{
							name: 'value',
							type: 'any',
							optional: false,
						},
						{
							name: 'is_json',
							type: 'boolean',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'load_from_storage',
					kind: 'function',
					doc_comment: 'Utility function to load a value from `localStorage` with optional parsing',
					summary: 'Utility function to load a value from `localStorage` with optional parsing',
					examples: [],
					see_also: [],
					source_location: {
						line: 26,
						column: 13,
						end_line: 48,
						end_column: 1,
					},
					type_signature:
						'<T>(key: string, is_json?: boolean, parse_fn?: ((value: unknown) => T | null) | undefined): T | null',
					return_type: 'T | null',
					parameters: [
						{
							name: 'key',
							type: 'string',
							optional: false,
						},
						{
							name: 'is_json',
							type: 'boolean',
							optional: false,
						},
						{
							name: 'parse_fn',
							type: '((value: unknown) => T | null) | undefined',
							optional: true,
						},
					],
					exported: false,
				},
			],
			imports: ['esm-env'],
			imported_by: ['./themer.svelte.ts'],
		},
		'./svelte_helpers.ts': {
			path: 'svelte_helpers.ts',
			declarations: [
				{
					name: 'analyze_svelte_component',
					kind: 'function',
					doc_comment: 'Analyze a Svelte component from its TSX transformation',
					summary: 'Analyze a Svelte component from its TSX transformation',
					examples: [],
					see_also: [],
					source_location: {
						line: 23,
						column: 13,
						end_line: 78,
						end_column: 1,
					},
					type_signature:
						'(tsx_code: string, source_file: SourceFile, checker: TypeChecker, component_name: string): Src_Module_Declaration',
					return_type: 'Src_Module_Declaration',
					parameters: [
						{
							name: 'tsx_code',
							type: 'string',
							optional: false,
						},
						{
							name: 'source_file',
							type: 'SourceFile',
							optional: false,
						},
						{
							name: 'checker',
							type: 'TypeChecker',
							optional: false,
						},
						{
							name: 'component_name',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
			],
			imports: ['typescript', './src_json.js', './ts_helpers.js'],
			module_comment:
				'Svelte component analysis helpers using svelte2tsx\n\nProvides utilities for extracting metadata from Svelte components:\n- Component props with types and JSDoc\n- Component-level documentation\n- Type information from TypeScript',
		},
		'./test_helpers.ts': {
			path: 'test_helpers.ts',
			declarations: [
				{
					name: 'mount_component',
					kind: 'function',
					doc_comment:
						'Mount a Svelte component for testing.\nCreates a container div, appends it to document.body, and mounts the component.',
					summary:
						'Mount a Svelte component for testing.\nCreates a container div, appends it to document.body, and mounts the component.',
					examples: [],
					see_also: [],
					source_location: {
						line: 12,
						column: 13,
						end_line: 25,
						end_column: 1,
					},
					type_signature:
						'<Props extends Record<string, any>>(Component: Component<Props, {}, string>, props: Props): { instance: any; container: HTMLElement; }',
					return_type: '{ instance: any; container: HTMLElement; }',
					parameters: [
						{
							name: 'Component',
							type: 'Component<Props, {}, string>',
							optional: false,
						},
						{
							name: 'props',
							type: 'Props',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'unmount_component',
					kind: 'function',
					doc_comment: 'Unmount a component and remove its container from the DOM.',
					summary: 'Unmount a component and remove its container from the DOM.',
					examples: [],
					see_also: [],
					source_location: {
						line: 30,
						column: 13,
						end_line: 33,
						end_column: 1,
					},
					type_signature: '(instance: any, container: HTMLElement): Promise<void>',
					return_type: 'Promise<void>',
					parameters: [
						{
							name: 'instance',
							type: 'any',
							optional: false,
						},
						{
							name: 'container',
							type: 'HTMLElement',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'create_contextmenu_event',
					kind: 'function',
					doc_comment: 'Create a contextmenu (rightclick) mouse event.',
					summary: 'Create a contextmenu (rightclick) mouse event.',
					examples: [],
					see_also: [],
					source_location: {
						line: 38,
						column: 13,
						end_line: 50,
						end_column: 1,
					},
					type_signature: '(x: number, y: number, options?: MouseEventInit): MouseEvent',
					return_type: 'MouseEvent',
					parameters: [
						{
							name: 'x',
							type: 'number',
							optional: false,
						},
						{
							name: 'y',
							type: 'number',
							optional: false,
						},
						{
							name: 'options',
							type: 'MouseEventInit',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'create_keyboard_event',
					kind: 'function',
					doc_comment: 'Create a keyboard event.',
					summary: 'Create a keyboard event.',
					examples: [],
					see_also: [],
					source_location: {
						line: 55,
						column: 13,
						end_line: 65,
						end_column: 1,
					},
					type_signature: '(key: string, options?: KeyboardEventInit): KeyboardEvent',
					return_type: 'KeyboardEvent',
					parameters: [
						{
							name: 'key',
							type: 'string',
							optional: false,
						},
						{
							name: 'options',
							type: 'KeyboardEventInit',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'create_mouse_event',
					kind: 'function',
					doc_comment: 'Create a generic mouse event.',
					summary: 'Create a generic mouse event.',
					examples: [],
					see_also: [],
					source_location: {
						line: 70,
						column: 13,
						end_line: 76,
						end_column: 1,
					},
					type_signature: '(type: string, options?: MouseEventInit): MouseEvent',
					return_type: 'MouseEvent',
					parameters: [
						{
							name: 'type',
							type: 'string',
							optional: false,
						},
						{
							name: 'options',
							type: 'MouseEventInit',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'set_event_target',
					kind: 'function',
					doc_comment:
						'Set the target property on an event (for testing).\nThe target property is readonly, so we need to use Object.defineProperty.',
					summary:
						'Set the target property on an event (for testing).\nThe target property is readonly, so we need to use Object.defineProperty.',
					examples: [],
					see_also: [],
					source_location: {
						line: 82,
						column: 13,
						end_line: 88,
						end_column: 1,
					},
					type_signature: '(event: Event, target: EventTarget): void',
					return_type: 'void',
					parameters: [
						{
							name: 'event',
							type: 'Event',
							optional: false,
						},
						{
							name: 'target',
							type: 'EventTarget',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'create_touch_event',
					kind: 'function',
					doc_comment: 'Create a touch event with one or more touches.',
					summary: 'Create a touch event with one or more touches.',
					examples: [],
					see_also: [],
					source_location: {
						line: 93,
						column: 13,
						end_line: 122,
						end_column: 1,
					},
					type_signature:
						'(type: string, touches: { clientX: number; clientY: number; target?: EventTarget | undefined; }[], options?: TouchEventInit): TouchEvent',
					return_type: 'TouchEvent',
					parameters: [
						{
							name: 'type',
							type: 'string',
							optional: false,
						},
						{
							name: 'touches',
							type: '{ clientX: number; clientY: number; target?: EventTarget | undefined; }[]',
							optional: false,
						},
						{
							name: 'options',
							type: 'TouchEventInit',
							optional: false,
						},
					],
					exported: false,
				},
			],
			imports: ['svelte'],
			module_comment:
				'Shared test utilities for vitest tests.\nProvides helpers for component mounting and DOM event creation.',
		},
		'./test_setup.ts': {
			path: 'test_setup.ts',
			declarations: [],
			imports: ['vitest'],
			module_comment: 'Global test setup for vitest.\nPolyfills APIs not available in jsdom.',
		},
		'./themer.svelte.ts': {
			path: 'themer.svelte.ts',
			declarations: [
				{
					name: 'Themer',
					kind: 'class',
					source_location: {
						line: 8,
						column: 0,
						end_line: 26,
						end_column: 1,
					},
					members: [
						{
							name: 'theme',
							kind: 'variable',
						},
						{
							name: 'color_scheme',
							kind: 'variable',
						},
						{
							name: 'toJSON',
							kind: 'function',
						},
					],
					exported: true,
				},
				{
					name: 'Themer_Json',
					kind: 'type',
					source_location: {
						line: 28,
						column: 0,
						end_line: 31,
						end_column: 1,
					},
					type_signature: 'Themer_Json',
					exported: true,
				},
				{
					name: 'themer_context',
					kind: 'variable',
					source_location: {
						line: 33,
						column: 13,
						end_line: 33,
						end_column: 54,
					},
					type_signature:
						'{ get: (error_message?: string | undefined) => Themer; maybe_get: () => Themer | undefined; set: (value: Themer) => Themer; }',
					exported: false,
				},
				{
					name: 'sync_color_scheme',
					kind: 'function',
					source_location: {
						line: 35,
						column: 13,
						end_line: 42,
						end_column: 1,
					},
					type_signature: '(color_scheme: Color_Scheme | null): void',
					return_type: 'void',
					parameters: [
						{
							name: 'color_scheme',
							type: 'Color_Scheme | null',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'COLOR_SCHEME_STORAGE_KEY',
					kind: 'variable',
					source_location: {
						line: 44,
						column: 13,
						end_line: 44,
						end_column: 58,
					},
					type_signature: '"fuz:color-scheme"',
					exported: false,
				},
				{
					name: 'THEME_STORAGE_KEY',
					kind: 'variable',
					source_location: {
						line: 45,
						column: 13,
						end_line: 45,
						end_column: 44,
					},
					type_signature: '"fuz:theme"',
					exported: false,
				},
				{
					name: 'save_color_scheme',
					kind: 'function',
					source_location: {
						line: 47,
						column: 13,
						end_line: 52,
						end_column: 1,
					},
					type_signature: '(color_scheme: Color_Scheme | null, key?: string): void',
					return_type: 'void',
					parameters: [
						{
							name: 'color_scheme',
							type: 'Color_Scheme | null',
							optional: false,
						},
						{
							name: 'key',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'load_color_scheme',
					kind: 'function',
					source_location: {
						line: 54,
						column: 13,
						end_line: 57,
						end_column: 80,
					},
					type_signature: '(fallback?: Color_Scheme, key?: string): Color_Scheme',
					return_type: 'Color_Scheme',
					parameters: [
						{
							name: 'fallback',
							type: 'Color_Scheme',
							optional: false,
						},
						{
							name: 'key',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'save_theme',
					kind: 'function',
					source_location: {
						line: 59,
						column: 13,
						end_line: 61,
						end_column: 1,
					},
					type_signature: '(theme: Theme | null, key?: string): void',
					return_type: 'void',
					parameters: [
						{
							name: 'theme',
							type: 'Theme | null',
							optional: false,
						},
						{
							name: 'key',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'load_theme',
					kind: 'function',
					source_location: {
						line: 63,
						column: 13,
						end_line: 64,
						end_column: 48,
					},
					type_signature: '(fallback?: Theme, key?: string): Theme',
					return_type: 'Theme',
					parameters: [
						{
							name: 'fallback',
							type: 'Theme',
							optional: false,
						},
						{
							name: 'key',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
			],
			imports: [
				'@ryanatkn/moss/theme.js',
				'@ryanatkn/moss/themes.js',
				'esm-env',
				'$lib/context_helpers.js',
				'$lib/storage.js',
			],
		},
		'./tome.ts': {
			path: 'tome.ts',
			declarations: [
				{
					name: 'Tome',
					kind: 'type',
					source_location: {
						line: 8,
						column: 13,
						end_line: 15,
						end_column: 2,
					},
					type_signature:
						'ZodObject<{ name: ZodString; category: ZodString; component: ZodAny; related: ZodArray<ZodString>; }, $strip>',
					exported: false,
				},
				{
					name: 'to_tome_pathname',
					kind: 'function',
					source_location: {
						line: 18,
						column: 13,
						end_line: 19,
						end_column: 55,
					},
					type_signature:
						'(item: { name: string; category: string; component: any; related: string[]; }, docs_path?: string): string',
					return_type: 'string',
					parameters: [
						{
							name: 'item',
							type: '{ name: string; category: string; component: any; related: string[]; }',
							optional: false,
						},
						{
							name: 'docs_path',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'tomes_context',
					kind: 'variable',
					source_location: {
						line: 21,
						column: 13,
						end_line: 21,
						end_column: 64,
					},
					type_signature:
						'{ get: (error_message?: string | undefined) => Map<string, { name: string; category: string; component: any; related: string[]; }>; maybe_get: () => Map<string, { name: string; category: string; component: any; related: string[]; }> | undefined; set: (value: Map<...>) => Map<...>; }',
					exported: false,
				},
				{
					name: 'get_tome_by_name',
					kind: 'function',
					source_location: {
						line: 23,
						column: 13,
						end_line: 28,
						end_column: 1,
					},
					type_signature:
						'(name: string): { name: string; category: string; component: any; related: string[]; }',
					return_type: '{ name: string; category: string; component: any; related: string[]; }',
					parameters: [
						{
							name: 'name',
							type: 'string',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'tome_context',
					kind: 'variable',
					source_location: {
						line: 30,
						column: 13,
						end_line: 30,
						end_column: 50,
					},
					type_signature:
						'{ get: (error_message?: string | undefined) => { name: string; category: string; component: any; related: string[]; }; maybe_get: () => { name: string; category: string; component: any; related: string[]; } | undefined; set: (value: { ...; }) => { ...; }; }',
					exported: false,
				},
			],
			imports: [
				'$app/paths',
				'@ryanatkn/belt/path.js',
				'zod',
				'$lib/context_helpers.js',
				'$lib/docs_helpers.svelte.js',
			],
		},
		'./tooltip_state.svelte.ts': {
			path: 'tooltip_state.svelte.ts',
			declarations: [
				{
					name: 'Tooltip_State',
					kind: 'class',
					doc_comment:
						'Global tooltip state manager\n\nManages a single tooltip instance that can be shown/hidden\nwith sticky behavior (can move mouse into tooltip)',
					summary: 'Global tooltip state manager',
					examples: [],
					see_also: [],
					source_location: {
						line: 11,
						column: 0,
						end_line: 67,
						end_column: 1,
					},
					members: [
						{
							name: 'opened',
							kind: 'variable',
						},
						{
							name: 'x',
							kind: 'variable',
						},
						{
							name: 'y',
							kind: 'variable',
						},
						{
							name: 'content',
							kind: 'variable',
						},
						{
							name: '#hide_timer',
							kind: 'variable',
						},
						{
							name: 'show',
							kind: 'function',
						},
						{
							name: 'hide',
							kind: 'function',
						},
						{
							name: 'cancel_hide',
							kind: 'function',
						},
					],
					exported: true,
				},
				{
					name: 'tooltip_context',
					kind: 'variable',
					doc_comment: 'Tooltip context for accessing global tooltip state',
					summary: 'Tooltip context for accessing global tooltip state',
					examples: [],
					see_also: [],
					source_location: {
						line: 72,
						column: 13,
						end_line: 72,
						end_column: 62,
					},
					type_signature:
						'{ get: (error_message?: string | undefined) => Tooltip_State; maybe_get: () => Tooltip_State | undefined; set: (value: Tooltip_State) => Tooltip_State; }',
					exported: false,
				},
			],
			imports: ['svelte', '$lib/context_helpers.js'],
		},
		'./ts_helpers.ts': {
			path: 'ts_helpers.ts',
			declarations: [
				{
					name: 'infer_declaration_kind',
					kind: 'function',
					doc_comment: 'Infer declaration kind from symbol and node',
					summary: 'Infer declaration kind from symbol and node',
					examples: [],
					see_also: [],
					source_location: {
						line: 11,
						column: 13,
						end_line: 36,
						end_column: 1,
					},
					type_signature:
						'(symbol: Symbol, node: Node): "function" | "type" | "variable" | "class" | null',
					return_type: '"function" | "type" | "variable" | "class" | null',
					parameters: [
						{
							name: 'symbol',
							type: 'Symbol',
							optional: false,
						},
						{
							name: 'node',
							type: 'Node',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'extract_jsdoc',
					kind: 'function',
					doc_comment: 'Extract JSDoc comment from node',
					summary: 'Extract JSDoc comment from node',
					examples: [],
					see_also: [],
					source_location: {
						line: 41,
						column: 13,
						end_line: 89,
						end_column: 1,
					},
					type_signature:
						'(node: Node, _source_file: SourceFile): { full_text: string; summary: string; examples: string[]; deprecated_message?: string | undefined; see_also: string[]; } | undefined',
					return_type:
						'{ full_text: string; summary: string; examples: string[]; deprecated_message?: string | undefined; see_also: string[]; } | undefined',
					parameters: [
						{
							name: 'node',
							type: 'Node',
							optional: false,
						},
						{
							name: '_source_file',
							type: 'SourceFile',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'extract_function_info',
					kind: 'function',
					doc_comment: 'Extract function/method information',
					summary: 'Extract function/method information',
					examples: [],
					see_also: [],
					source_location: {
						line: 94,
						column: 13,
						end_line: 133,
						end_column: 1,
					},
					type_signature:
						'(node: Node, symbol: Symbol, checker: TypeChecker, decl: Src_Module_Declaration, _jsdoc: { full_text: string; summary: string; examples: string[]; deprecated_message?: string | undefined; see_also: string[]; } | undefined): void',
					return_type: 'void',
					parameters: [
						{
							name: 'node',
							type: 'Node',
							optional: false,
						},
						{
							name: 'symbol',
							type: 'Symbol',
							optional: false,
						},
						{
							name: 'checker',
							type: 'TypeChecker',
							optional: false,
						},
						{
							name: 'decl',
							type: 'Src_Module_Declaration',
							optional: false,
						},
						{
							name: '_jsdoc',
							type: '{ full_text: string; summary: string; examples: string[]; deprecated_message?: string | undefined; see_also: string[]; } | undefined',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'extract_type_info',
					kind: 'function',
					doc_comment: 'Extract type/interface information',
					summary: 'Extract type/interface information',
					examples: [],
					see_also: [],
					source_location: {
						line: 138,
						column: 13,
						end_line: 162,
						end_column: 1,
					},
					type_signature:
						'(node: Node, _symbol: Symbol, checker: TypeChecker, decl: Src_Module_Declaration): void',
					return_type: 'void',
					parameters: [
						{
							name: 'node',
							type: 'Node',
							optional: false,
						},
						{
							name: '_symbol',
							type: 'Symbol',
							optional: false,
						},
						{
							name: 'checker',
							type: 'TypeChecker',
							optional: false,
						},
						{
							name: 'decl',
							type: 'Src_Module_Declaration',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'extract_class_info',
					kind: 'function',
					doc_comment: 'Extract class information',
					summary: 'Extract class information',
					examples: [],
					see_also: [],
					source_location: {
						line: 167,
						column: 13,
						end_line: 202,
						end_column: 1,
					},
					type_signature:
						'(node: Node, _symbol: Symbol, _checker: TypeChecker, decl: Src_Module_Declaration): void',
					return_type: 'void',
					parameters: [
						{
							name: 'node',
							type: 'Node',
							optional: false,
						},
						{
							name: '_symbol',
							type: 'Symbol',
							optional: false,
						},
						{
							name: '_checker',
							type: 'TypeChecker',
							optional: false,
						},
						{
							name: 'decl',
							type: 'Src_Module_Declaration',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'extract_variable_info',
					kind: 'function',
					doc_comment: 'Extract variable information',
					summary: 'Extract variable information',
					examples: [],
					see_also: [],
					source_location: {
						line: 207,
						column: 13,
						end_line: 219,
						end_column: 1,
					},
					type_signature:
						'(node: Node, symbol: Symbol, checker: TypeChecker, decl: Src_Module_Declaration): void',
					return_type: 'void',
					parameters: [
						{
							name: 'node',
							type: 'Node',
							optional: false,
						},
						{
							name: 'symbol',
							type: 'Symbol',
							optional: false,
						},
						{
							name: 'checker',
							type: 'TypeChecker',
							optional: false,
						},
						{
							name: 'decl',
							type: 'Src_Module_Declaration',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'is_exported',
					kind: 'function',
					doc_comment: 'Check if node is exported',
					summary: 'Check if node is exported',
					examples: [],
					see_also: [],
					source_location: {
						line: 224,
						column: 13,
						end_line: 230,
						end_column: 1,
					},
					type_signature: '(node: Node): boolean',
					return_type: 'boolean',
					parameters: [
						{
							name: 'node',
							type: 'Node',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'extract_module_comment',
					kind: 'function',
					doc_comment: 'Extract module-level comment',
					summary: 'Extract module-level comment',
					examples: [],
					see_also: [],
					source_location: {
						line: 235,
						column: 13,
						end_line: 253,
						end_column: 1,
					},
					type_signature: '(source_file: SourceFile): string | undefined',
					return_type: 'string | undefined',
					parameters: [
						{
							name: 'source_file',
							type: 'SourceFile',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'extract_imports',
					kind: 'function',
					doc_comment: 'Extract import statements',
					summary: 'Extract import statements',
					examples: [],
					see_also: [],
					source_location: {
						line: 258,
						column: 13,
						end_line: 268,
						end_column: 1,
					},
					type_signature: '(source_file: SourceFile): string[]',
					return_type: 'string[]',
					parameters: [
						{
							name: 'source_file',
							type: 'SourceFile',
							optional: false,
						},
					],
					exported: false,
				},
				{
					name: 'create_ts_program',
					kind: 'function',
					doc_comment: 'Create TypeScript program for analysis',
					summary: 'Create TypeScript program for analysis',
					examples: [],
					see_also: [],
					source_location: {
						line: 273,
						column: 13,
						end_line: 284,
						end_column: 1,
					},
					type_signature: '(log: any): Program | null',
					return_type: 'Program | null',
					parameters: [
						{
							name: 'log',
							type: 'any',
							optional: false,
						},
					],
					exported: false,
				},
			],
			imports: ['typescript', './src_json.js'],
			module_comment: 'TypeScript Compiler API helpers for extracting metadata from source code',
			imported_by: ['./svelte_helpers.ts'],
		},
	},
};
