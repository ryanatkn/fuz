/* TODO @multiple docs in library */

/*

See `variable_classes.css` for the utility classes based on the style variables.

*/

/* TODO display_flex? more predictable+verbose or shorthand? */

.relative {
	position: relative;
}
.absolute {
	position: absolute;
}
.fixed {
	position: fixed;
}
.sticky {
	position: sticky;
}
.static {
	position: static;
}

.overflow_auto {
	overflow: auto;
}
.overflow_hidden {
	overflow: hidden;
}
.overflow_scroll {
	overflow: scroll;
}
.overflow_clip {
	overflow: clip;
}
.overflow_visible {
	overflow: visible;
}

.overflow_x_auto {
	overflow-x: auto;
}
.overflow_x_hidden {
	overflow-x: hidden;
}
.overflow_x_scroll {
	overflow-x: scroll;
}
.overflow_x_clip {
	overflow-x: clip;
}
.overflow_x_visible {
	overflow-x: visible;
}

.overflow_y_auto {
	overflow-y: auto;
}
.overflow_y_hidden {
	overflow-y: hidden;
}
.overflow_y_scroll {
	overflow-y: scroll;
}
.overflow_y_clip {
	overflow-y: clip;
}
.overflow_y_visible {
	overflow-y: visible;
}

.inline {
	display: inline;
}
.inline_block {
	display: inline-block;
}
.block {
	display: block;
}
.display_none {
	display: none;
}
.display_contents {
	display: contents;
}
.flex {
	display: flex;
}
.flex_1 {
	flex: 1;
}
.grid {
	display: flex;
}

.box {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

/* can be used to override the direction of a `.box` */
.row {
	display: flex;
	flex-direction: row;
	align-items: center;
}

/* Makes flexboxes wrap. */
.wrap {
	flex-wrap: wrap;
}

/* Stops text from wrapping. */
.nowrap {
	white-space: nowrap;
}

/* Formats content to wrap long strings and preserve displayed whitespace. */
.formatted {
	overflow: hidden;
	white-space: break-spaces;
}

.text_align_center {
	text-align: center;
}
.text_align_right {
	text-align: right;
}
.text_align_left {
	text-align: left;
}
.text_align_justify {
	text-align: justify;
}

.ellipsis {
	display: block;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

.pixelated {
	image-rendering: -webkit-optimize-contrast; /* Safari */
	image-rendering: -o-crisp-edges; /* OS X & Windows Opera (12.02+) */
	image-rendering: pixelated; /* in case crisp-edges isn't supported */
	image-rendering: crisp-edges; /* the recommended pixel art setting according to MDN */
}

.p_0 {
	padding: 0;
}
.p_t_0 {
	padding-top: 0;
}
.p_r_0 {
	padding-right: 0;
}
.p_b_0 {
	padding-bottom: 0;
}
.p_l_0 {
	padding-left: 0;
}

.m_0 {
	margin: 0;
}
.m_t_0 {
	margin-top: 0;
}
.m_r_0 {
	margin-right: 0;
}
.m_b_0 {
	margin-bottom: 0;
}
.m_l_0 {
	margin-left: 0;
}

.m_auto {
	margin: auto;
}
.m_x_auto {
	margin-left: auto;
	margin-right: auto;
}
.m_y_auto {
	margin-top: auto;
	margin-bottom: auto;
}

.width_md {
	width: 100%;
	max-width: var(--width_md);
}
.width_sm {
	width: 100%;
	max-width: var(--width_sm);
}
.width_full {
	width: 100%;
}
.w_0 {
	/* TODO inconsistency */
	width: 0;
}

.height_full {
	height: 100%;
}
.h_0 {
	/* TODO inconsistency */
	height: 0;
}
