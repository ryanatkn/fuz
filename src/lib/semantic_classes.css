/*
The name `.prose` was copied from Tailwind's @tailwindcss/typography -
https://tailwindcss.com/docs/typography-plugin
In Fuz it means "document-like typographic markup" distinct from the rest of the page's markup.
An example is `ul`s - inside `.prose` they have visible bullet points, but they don't by default.
MDN's documented content categories didn't match the intent:
https://developer.mozilla.org/en-US/docs/Web/HTML/Content_categories
*/
.prose {
	line-height: var(--line_height_4);
	overflow-wrap: break-word; /* @see https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap#break-word */
}
.prose :is(h1, h2, h3, h4, h5, h6) {
	line-height: var(--line_height_3);
	text-wrap: balance; /* @see https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap#balance */
}
.prose h1 {
	margin: var(--space_xl2) 0;
}
.prose h2 {
	margin: var(--space_xl) 0;
}
.prose h3 {
	margin: var(--space_lg) 0;
}
.prose h4 {
	margin: var(--space_md) 0;
}
.prose h5 {
	margin: var(--space_sm) 0;
}
.prose h6 {
	margin: var(--space_xs) 0;
}
.prose :is(ul, ol, menu) {
	padding-left: var(--space_xl4);
	list-style: initial;
}
.prose ol {
	list-style: decimal;
}
.prose li {
	display: list-item; /* reset from `block` */
}
.prose a {
	display: inline;
}
.prose section {
	margin-bottom: var(--space_xl4);
}
/* checkboxes and radios are expected to be nested inside a `label`, thus no bottom margin */
.prose
	:is(
		p,
		ul,
		ol,
		menu,
		form,
		fieldset,
		table,
		details,
		textarea,
		select,
		label,
		pre,
		blockquote,
		aside
	):not(:last-child) {
	margin-bottom: var(--space_lg);
}
/* TODO others with a smaller margin? */
.prose summary:not(:last-child) {
	/* TODO maybe change API to like `--margin_bottom`? */
	margin-bottom: var(--space_xs);
}

/* TODO maybe remove? */
.selectable {
	cursor: pointer;
	background-color: var(--button_bg);
	border-color: var(--border_color_3);
	border-style: var(--border_style);
	border-width: var(--border_width);
}
.selectable:hover {
	background-color: var(--button_bg_hover);
	border-color: var(--border_color_2);
}
.selectable.selected,
.selectable:active {
	background-color: var(--button_bg_active);
	border-color: var(--color_a_5);
}
.selectable.selected {
	cursor: default;
}
.selectable.selected.deselectable:not(:disabled) {
	cursor: pointer;
}

/* A pane is a box floating over the page, like for dialogs.
By default it's opaque, resetting the background to the initial depth. */
.pane {
	background-color: var(--pane_bg, var(--bg));
	/* TODO this is preferred but causes blurriness with nested contextmenus, maybe they shouldn't be panes? is pane overloaded? maybe extract the bg part of it?
	filter: drop-shadow(var(--shadow)); */
	box-shadow: var(--shadow);
	border-radius: var(--radius_xs);
}
/* A panel is a box embedded into the page, useful for visually isolating content. */
.panel {
	border-radius: var(--radius_sm);
	background-color: var(--panel_bg, var(--fg_1));
}

/* TODO @multiple docs in library */

/* TODO other button variants? */
/* TODO this is slightly strange that it doesn't use --icon_size */
.icon_button {
	width: var(--input_height);
	height: var(--input_height);
	min-width: var(--input_height);
	min-height: var(--input_height);
	flex-shrink: 0;
	font-weight: 900;
	padding: 0;
}
.plain {
	border: none;
	box-shadow: none;
	--button_bg: transparent;
}

.menu_item {
	--border_radius: 0;
	--border_color: var(--border_color_3);
	position: relative;
	z-index: 2;
	width: 100%;
	min-height: var(--min_height, var(--icon_size_sm));
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: var(
		--menu_item_padding,
		var(--space_xs3) var(--space_xs3) var(--space_xs3) var(--space_xs)
	);
}
.menu_item.selected {
	/* TODO different patterns for border and bg? */
	--border_color: var(--color_a_5);
	background-color: var(--fg_1);
	z-index: 1;
}
.menu_item.plain {
	border: none;
}
.menu_item .content {
	display: flex;
	align-items: center;
	flex: 1;
	/* allows the flex children to shrink */
	min-width: 0;
}
.menu_item .icon {
	width: var(--icon_size);
	margin-right: var(--space_xs);
	flex-shrink: 0;
	text-align: center;
	font-weight: 900;
}
.menu_item .title {
	margin-right: var(--space_lg);
	flex-shrink: 1;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	line-height: var(--line_height_6); /* prevents the bottom of g's and others from being cut off */
}

.chevron {
	position: relative;
	height: 8px;
}
.chevron::before {
	display: block;
	content: '';
	border: 4px solid transparent;
	border-left-color: var(--text_2);
}

.chip {
	font-size: var(--font_size_sm);
	font-weight: 600;
	padding: var(--space_xs4) var(--space_sm);
	background-color: var(--darken_1);
	border-radius: var(--radius_xs);
}
a.chip {
	font-weight: 700;
}

/* Formats content to wrap long strings and preserve displayed whitespace. */
.formatted {
	overflow: hidden;
	white-space: break-spaces;
}
